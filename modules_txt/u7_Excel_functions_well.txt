'=======================================================================================
'Unifloc 7.26  coronav2                                          khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2020
'
'=======================================================================================
' функции расчета скважины для проведения расчетов из интерфейса Excel
Option Explicit
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' Расчет устьевого давления скважины c УЭЦН,
' расчет распределения давления и температуры в скважине
' с использованием многофазных корреляций.
Public Function wellESP_plin_pwf_atma( _
             ByVal p_wf_atma As Double, _
             ByVal t_wf_C As Double, _
             ByVal q_liq_sm3day As Double, _
             ByVal fw_perc As Double, _
    Optional ByVal q_gas_sm3day As Double = 0, _
    Optional ByVal p_cas_atma As Double, _
    Optional ByVal str_PVT As String = PVT_DEFAULT, _
    Optional ByVal str_construct As String = "", _
    Optional ByVal str_ESP As String = "", _
    Optional ByVal str_gassep As String = "", _
    Optional ByVal str_motor As String = "", _
    Optional ByVal str_cable As String = "", _
    Optional ByVal str_amb As String = "", _
    Optional ByVal hcorr As H_CORRELATION = 0, _
    Optional ByVal tmethod As TEMP_CALC_METHOD = StartEndTemp, _
    Optional ByVal c_calibr = 1, _
    Optional ByVal out = 0)
' Обязательные параметры
'p_wf_atma - забойное давление с которого начинается расчет,
'            граничное значение для проведения расчета
't_wf_C    - температура флюида на забое
'q_liq_sm3day - дебит жидкости в поверхностных условиях
'fw_perc     - обводненность
'q_gas_sm3day - свободный газ поступающие в скважину
'             на забое для ЭЦН, в затруб для газлифта.
'p_cas_atma - затрубное давление (расчета Ндин)
'str_PVT    - закодированная строка с параметрами PVT.
'             если задана - перекрывает другие значения
'str_ESP    - закодированная строка с установленным ЭЦН.
'str_gassep
'str_motor  - параметры ПЭД, если необходимы для расчета
'str_cable  - параметры кабеля, если есть ПЭД и
'             отличаются от стандартных
'str_amb    - параметры среды вокруг скважины.
'             влияют на расчет температуры для модели
'             учитывающей эмиссию тепла
'hcorr      - гидравлическая корреляция, H_CORRELATION
'                 BeggsBrill = 0
'                 Ansari = 1
'                 Unified = 2
'                 Gray = 3
'                 HagedornBrown = 4
'                 SakharovMokhov = 5
'tmethod    - температурная модель
'c_calibr   - поправка на гравитационную составляющую
'           перепада давления, если дать ссылку на две ячейки,
'           то вторая будет поправка на трение.
'out  - флаг вывод значений между концами трубы
'           1 основные, 2 все значения.
'           вывод может замедлять расчет (не сильно)
'num_value - значение которое будет выводиться первым
'результат - число - давление на устье скважины.
'           и распределение параметров по скважине.
'description_end
    
    Dim well As New CWellESP
On Error GoTo err1:
    
    Call well.init_well_full( _
                            str_PVT, _
                            str_construct, _
                            str_ESP, _
                            str_gassep, _
                            str_motor, _
                            str_cable, _
                            str_amb, _
                            hcorr, _
                            tmethod, _
                            c_calibr)
   'well.esp.set_ksep_total fullyManual
   Call well.calc_plin_pwf_atma(p_wf_atma, t_wf_C, q_liq_sm3day, fw_perc, q_gas_sm3day, p_cas_atma, saveCurve:=allCurves)
   wellESP_plin_pwf_atma = well.array_out
   
   Exit Function
err1:
   wellESP_plin_pwf_atma = Array(-1, "error")
   Dim msg As String
   msg = "wellESP_plin_pwf_atma: error " + sDELIM + Err.Description
   addLogMsg msg
End Function
''description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
'' Расчет забойного давления скважины,
'' расчет распределения давления и температуры в скважине
'' с использованием многофазных корреляций
'Public Function well_pwf_plin_atma( _
'             ByVal p_lin_atma As Double, _
'             ByVal t_wf_C As Double, _
'             ByVal t_val_C As Variant, _
'             ByVal h_list_m As Variant, _
'             ByVal d_tub_list_mm As Variant, _
'             ByVal d_cas_list_mm As Variant, _
'             ByVal q_liq_sm3day As Double, _
'             ByVal fw_perc As Double, _
'    Optional ByVal q_gas_sm3day As Double = 0, _
'    Optional ByVal str_PVT As String = PVT_DEFAULT, _
'    Optional ByVal str_AL As String = "", _
'    Optional ByVal p_cas_atma As Double, _
'    Optional ByVal d_choke_mm As Double, _
'    Optional ByVal hydr_corr As H_CORRELATION = 0, _
'    Optional ByVal temp_method As TEMP_CALC_METHOD = StartEndTemp, _
'    Optional ByVal c_calibr = 1, _
'    Optional ByVal roughness_m As Double = 0.0001, _
'    Optional ByVal out_curves As Integer = 1, _
'    Optional ByVal out_curves_num_points As Integer = 20, _
'    Optional ByVal num_value As Integer = 0)
'' Обязательные параметры
'' p_lin_atma - устьевое давление с которого начинается расчет, атм
''               граничное значение для проведения расчета
'' t_wf_C     - температура флюида на забое
'' t_val_C   - температура вдоль скважины
''           если число то температура на устье скважины
''           если range или таблица [0..N,0..1] то температура
''           окружающей среды по вертикальной глубине, С
'' h_list_m  - траектория скважины, если число то измеренная
''           длина, range или таблица [0..N,0..1] то траектория
'' d_tub_list_mm - диаметр НКТ. range или таблица [0..N,0..1]
'' d_cas_list_mm - диаметр эксп колонны. range или таблица [0..N,0..1]
'' q_liq_sm3day - дебит жидкости в поверхностных условиях
'' fw_perc     - обводненность
'' q_gas_sm3day  - свободный газ поступающие в скважину
''               на забое для ЭЦН, в затруб для газлифта.
'' str_PVT     - закодированная строка с параметрами PVT.
''               если задана - перекрывает другие значения
'' str_AL      - закодированная параметров мех добычи.
''               строка параметров ЭЦН либо строка параметров газлифта
'' p_cas_atma  - затрубное давление (расчета Ндин)
'' d_choke_mm  - диаметр штуцера
'' hydr_corr    - гидравлическая корреляция, H_CORRELATION
''                  BeggsBrill = 0
''                  Ansari = 1
''                  Unified = 2
''                  Gray = 3
''                  HagedornBrown = 4
''                  SakharovMokhov = 5
'' temp_method  - температурная модель
'' c_calibr  - поправка на гравитационную составляющую
''           перепада давления, если дать ссылку на две ячейки,
''           то вторая будет поправка на трение.
'' roughness_m - шероховатость трубы
'' out_curves - флаг вывод значений между концами трубы
''           1 основные, 2 все значения.
''           вывод может замедлять расчет (не сильно)
'' out_curves_num_points - количество точек для вывода значений
''           между концами трубы.
'' num_value  - значение которое будет выводиться первым
'' результат - число - давление на устье скважины.
''           и распределение параметров по скважине.
''description_end
'
'
'    Dim well
'
'
'On Error GoTo err1:
'
''    Set well = well_load( _
''                    q_liq_sm3day, _
''                    fw_perc, _
''                    h_perf_m, _
''                    p_cas_atma, _
''                    d_choke_mm, _
''                    str_PVT, _
''                    str_AL, _
''                    hmes_habs_list_m, _
''                    dtub_list_mm, _
''                    dcas_list_mm, _
''                    temp_list_C, _
''                    hydr_corr, _
''                    temp_method, _
''                    c_calibr_grav, _
''                    c_calibr_fric, _
''                    c_calibr_choke, _
''                    , _
''                    q_gas_sm3day)
'
'    Dim res1
'    res1 = well.CalcDown(p_lin_atma, t_wf_C, saveCurve:=allCurves)
'  '  well_pwf_plin_atma = well_out_arr(well, param_out, num_pt_crv)
'
'    Exit Function
'err1:
'    well_pwf_plin_atma = Array(-1, "error")
'    addLogMsg "Error:well_pwf_plin_atma:" & Err.Description
'End Function
'Private Function well_load( _
'             ByVal t_wf_C As Double, _
'             ByVal t_val_C As Variant, _
'             ByVal h_perf_m As Double, _
'             ByVal h_tub_m As Double, _
'             ByVal h_list_m As Variant, _
'             ByVal d_tub_list_mm As Variant, _
'             ByVal d_cas_list_mm As Variant, _
'             ByVal q_liq_sm3day As Double, _
'             ByVal fw_perc As Double, _
'    Optional ByVal q_gas_sm3day As Double = 0, _
'    Optional ByVal str_PVT As String = PVT_DEFAULT, _
'    Optional ByVal str_AL As String = "", _
'    Optional ByVal p_cas_atma As Double, _
'    Optional ByVal d_choke_mm As Double, _
'    Optional ByVal hydr_corr As H_CORRELATION = 0, _
'    Optional ByVal temp_method As TEMP_CALC_METHOD = StartEndTemp, _
'    Optional ByVal c_calibr = 1, _
'    Optional ByVal roughness_m As Double = 0.0001)
'
'
'
'    Dim PVT As New CPVT
'    Dim tr_cas As New CPipeTrajectory
'    Dim tr_tub As New CPipeTrajectory
'    Dim amb As New CAmbientFormation
'    Dim temp_crv As New CInterpolation
'    Dim well As CWellESP
'    Dim well_gl As CWellGL
'    Dim ESPsystem As CESPsystem
'    Dim GLVset As CGLValveSet
'    Dim well_type As Integer
'
'    Dim c_calibr_grav As Double
'    Dim c_calibr_fric As Double
'    Dim c_calibr_choke As Double
'
'On Error GoTo err1:
'
'    Call tr_cas.init_from_vert_range(h_list_m, d_cas_list_mm)
'    tr_cas.roughness_m = roughness_m
'
'    Call tr_tub.init_from_vert_range(h_list_m, d_tub_list_mm, h_tub_m)
'    tr_tub.roughness_m = roughness_m
'
'    ' определим тип скважины, чтобы создать соответствующий объект
'    If Len(str_AL) < 3 Then
'        well_type = 0
'    Else
'        If Left(str_AL, 3) = "ESP" Then
'            well_type = 1
'        ElseIf Left(str_AL, 3) = "GLV" Then
'            well_type = 2
'        End If
'    End If
'
'    Dim tvl
'    Set well = new_well_factory(h_perf_m, h_tub_m, tr_cas:=tr_cas, tr_tub:=tr_tub, well_type:=well_type)
'
'    tvl = array_num_from_range(t_val_C, True)
'    If UBound(tvl, 1) = 1 Or UBound(tvl, 2) = 1 Then
'        Call amb.init_amb_temp_points(0, tvl(1, 1), h_perf_m, t_wf_C)
'    Else
'        Call amb.init_amb_temp_arr(t_val_C)
'    End If
'    Set well.ambient_formation = amb
'
'    Set PVT = PVT_decode_string(str_PVT)
'    PVT.q_liq_sm3day = q_liq_sm3day
'    PVT.fw_perc = fw_perc
'    PVT.q_gas_free_sm3day = q_gas_sm3day
'    Set well.fluid = PVT
'
'    well.choke.d_choke_m = d_choke_mm / 1000
'
'    Call well.set_param(calc_along_coord:=False, _
'                        flow_along_coord:=False, _
'                        hcor:=hydr_corr, _
'                        temp_method:=temp_method)
'
'    Call read_calibr(c_calibr, c_calibr_grav, c_calibr_fric, c_calibr_choke)
'    well.c_calibr_fric = c_calibr_fric
'    well.c_calibr_grav = c_calibr_grav
'    well.choke.c_calibr_fr = c_calibr_choke
'
'    well.p_cas_atma = p_cas_atma
'
'
'    If Len(str_AL) < 3 Then
'        Set well.esp = Nothing
'    Else
'        If Left(str_AL, 3) = "ESP" Then
'            Set ESPsystem = ESP_decode_string(str_AL)
'            Set well.esp = ESPsystem ' link well with ESP object
'            well.isCalcESPtemp = True
'            well.isCalcCasing = True
'            ' set separation coefficient if given
'            If ESPsystem.ksep_manual_fr > 0 And ESPsystem.ksep_manual_fr <= 1 Then
'                Call well.set_ksep_total_d(valueManual, ESPsystem.ksep_manual_fr, 0)
'            Else
'                Call well.set_ksep_total_d(byCorrealation, ESPsystem.ksep_manual_fr, ESPsystem.ksep_gassep_fr)
'            End If
'
''        ElseIf Left(str_AL, 3) = "GLV" Then
''            Set GLVset = GL_decode_string(str_AL)
''            Set well.valves = GLVset
'        End If
'
'
'
'    End If
'    Set well_load = well
'
'    Exit Function
'err1:
'    well_load = Array(-1, "error")
'    addLogMsg "Error:well_load:" & Err.Description
'End Function
'' function prepares output array for public functions
'' подготовим данные для вывода
'Private Function well_out_arr(well As IWell, _
'                     Optional ByVal FirsrCol As Integer = 0, _
'                     Optional ByVal num_points As Integer = 21)
'' данные выводятся в одну линию, чтобы, хотя бы теоретически, можно было вывести данные по скважине в таблице
'' во второй строке выводятся подписи параметров, если необходимо
'' первый параметр настраиваемый
'    Dim ar1, ar2
'    Dim res As New Dictionary
'    Dim resAL As New Dictionary
'    Const arr_len = 32
'On Error GoTo err1:
'    ReDim ar1(arr_len)
'    ReDim ar2(arr_len)
'    ReDim ar3(arr_len)
'    ReDim ar4(arr_len)
'    Dim i As Integer
'    Dim pcas_out As Double
'    With well
'        If .GLVset.p_gas_inj_atma > 0 Then
'           pcas_out = .GLVset.p_gas_inj_atma
'        Else
'           pcas_out = .PTcas.p_atma
'        End If
'
'         ' сначала идут общие параметры для всех типов скважин
'         res.Add "p_line_atma", .PTLine.p_atma                              'i=1
'         res.Add "p_buf_atma", .PTbuf.p_atma                                'i=2
'         res.Add "p_cas_atma", .PTcas.p_atma                                'i=3
'         res.Add "p_dis_atma", .PTdis.p_atma                                'i=4
'         res.Add "p_int_atma", .PTintake.p_atma                             'i=5
'         res.Add "p_wf_atma", .PTwf.p_atma                                  'i=6
'         res.Add "q_liq_sm3day", .qliq                                       'i=7
'         res.Add "fw_perc", .fw                                             'i=8
'         res.Add "qgas_sm3day", .qgas                                       'i=9
'         res.Add "t_line_C", .PTLine.t_C                                    'i=10
'         res.Add "t_buf_C", .PTbuf.t_C                                      'i=11
'         res.Add "t_cas_C", .PTcas.t_C                                      'i=12
'         res.Add "t_dis_C", .PTdis.t_C                                      'i=13
'         res.Add "t_int_C", .PTintake.t_C                                   'i=14
'         res.Add "t_wf_C", .PTwf.t_C                                        'i=15
'         res.Add "dchoke_mm", .choke.d_choke_mm                             'i=16
'         res.Add "c_calibr_choke", .choke.c_calibr_fr                       'i=17
'         ' todo добавить калибровки потока в скважине
'         ' добавить газовый фактор?
'         If well.isESP Then
'             resAL.Add "hdyn_m", .HdynPcas.hdyn_m                             'i=1
'             resAL.Add "pcas_hdyn_atma", .HdynPcas.p_cas_atma                 'i=2
'             resAL.Add "correct_hdyn", .HdynPcas.correct                      'i=3
'             resAL.Add "ESP.name", .ESP.name                                  'i=4
'             resAL.Add "ESP.freq_Hz", .ESP.freq_Hz                            'i=5
'             resAL.Add "ESP.U_V", .ESP.U_V                                    'i=6
'             resAL.Add "ESP.Utr_V", .ESP.U_trans_high_V                       'i=7
'             resAL.Add "ESP.I_A", .ESP.I_A                                    'i=8
'             resAL.Add "ESP.load_fr", .ESP.load_fr                            'i=9
'             resAL.Add "ESPpump.eff_d", .ESP.ESP_pump.eff_ESP_d               'i=10
'             resAL.Add "ESPsys.eff_d", .ESP.eff_d                             'i=11
'             resAL.Add "ESP.power_CS", .ESP.power_CS_calc_W                   'i=12
'             resAL.Add "ESP.fact_power_CS", .ESP.power_CS_fact_W              'i=13
'             resAL.Add "ESP.ksep_total_fr", .ESP.ksep_total_fr                'i=14
'             resAL.Add "ESP.ksep_nat_fr", .ESP.ksep_nat_fr                    'i=15
'             resAL.Add "ESP.ksep_gassep_fr", .ESP.ksep_gassep_fr              'i=16
'             resAL.Add "ESP.c_calibr_head", .ESP.c_calibr_head                'i=17
'             resAL.Add "ESP.c_calibr_rate", .ESP.c_calibr_rate                'i=18
'             resAL.Add "ESP.c_calibr_power", .ESP.c_calibr_power              'i=19
'        ElseIf well.isGL Then
'             resAL.Add "GLV.count", .GLVset.Count                             'i=1
'             resAL.Add "q_gas_inj_sm3day", .GLVset.q_gas_inj_sm3day           'i=2
'             resAL.Add "p_gas_inj_atma", pcas_out                             'i=3
'             resAL.Add "d_gas_inj_mm", .GLVset.d_gas_inj_mm                   'i=4
'             resAL.Add "p_gas_cas_inj_atma", .GLVset.p_gas_inj_atma           'i=5
'             If .GLVset.Count > 0 Then
'                Dim vlv As CGLvalve
'                For i = 1 To .GLVset.Count
'                    Set vlv = .GLVset.valves(i)
'                    resAL.Add "glv" + CStr(i) + ":d_mm", vlv.d_port_mm
'                    resAL.Add "glv" + CStr(i) + ":p_in_atma", vlv.p_in_atma
'                    resAL.Add "glv" + CStr(i) + ":p_out_atma", vlv.p_out_atma
'                    resAL.Add "glv" + CStr(i) + ":q_gas_scm3day", vlv.q_gas_inj_scm3day
'                    resAL.Add "glv" + CStr(i) + ":t_C", vlv.t_C
'                Next i
'             End If
'        End If
''
'        For i = 1 To res.Count
'            ar1(i) = res.Items()(i - 1)
'            ar2(i) = res.Keys()(i - 1)
'        Next i
'
'        For i = 1 To resAL.Count
'            ar3(i) = resAL.Items()(i - 1)
'            ar4(i) = resAL.Keys()(i - 1)
'        Next i
'
'        ' first column can have any number
'        ' set it here
'        If FirsrCol < 100 Then
'            ar1(0) = ar1(FirsrCol)
'            ar2(0) = ar2(FirsrCol)
'        Else
'            ar1(0) = ar3(FirsrCol - 100)
'            ar2(0) = ar4(FirsrCol - 100)
'        End If
'        ' выведем дополнительно спасенные кривые по скважине
'        Dim arr()
'
'        Dim crv1 As CInterpolation
'        Dim crv_name As String
'        Dim offset As Integer
'        Dim n As Integer
'
'        offset = 5
'
'        ReDim Preserve arr(num_points + offset, arr_len)
'        For i = LBound(ar1) To UBound(ar1)
'            arr(0, i) = ar1(i)
'            arr(1, i) = ar2(i)
'            arr(2, i) = ar3(i)
'            arr(3, i) = ar4(i)
'            arr(4, i) = i
'        Next i
'
'        Set crv1 = .curve(str_PtubHmes_curve).ClonePointsToNum(num_points)
'        arr(offset, 0) = "num"
'        arr(offset, 1) = crv1.xName
'        arr(offset, 2) = crv1.yName
'        For i = 1 To num_points
'            arr(offset + i, 0) = i
'            arr(offset + i, 1) = crv1.pointX(i)
'            arr(offset + i, 2) = crv1.PointY(i)
'        Next i
'        n = 2
'
'        ' use copy paste below :)   ugly but works
'        crv_name = "c_udl_m": n = n + 1
'                                            Set crv1 = .curve(crv_name).ClonePointsToNum(num_points)
'                                            arr(offset, n) = crv1.xName
'                                            arr(offset, n + 1) = crv1.yName
'                                            For i = 1 To num_points
'                                                arr(offset + i, n) = crv1.pointX(i)
'                                                arr(offset + i, n + 1) = crv1.PointY(i)
'                                            Next i
'        crv_name = "c_Diam": n = n + 2
'                                            Set crv1 = .curve(crv_name).ClonePointsToNum(num_points)
'                                            arr(offset, n) = crv1.xName
'                                            arr(offset, n + 1) = crv1.yName
'                                            For i = 1 To num_points
'                                                arr(offset + i, n) = crv1.pointX(i)
'                                                arr(offset + i, n + 1) = crv1.PointY(i)
'                                            Next i
'        crv_name = "c_Theta": n = n + 2
'                                            Set crv1 = .curve(crv_name).ClonePointsToNum(num_points)
'                                            arr(offset, n) = crv1.xName
'                                            arr(offset, n + 1) = crv1.yName
'                                            For i = 1 To num_points
'                                                arr(offset + i, n) = crv1.pointX(i)
'                                                arr(offset + i, n + 1) = crv1.PointY(i)
'                                            Next i
'
'        crv_name = str_TtubHmes_curve: n = n + 2
'                                            Set crv1 = .curve(crv_name).ClonePointsToNum(num_points)
'                                            arr(offset, n) = crv1.xName
'                                            arr(offset, n + 1) = crv1.yName
'                                            For i = 1 To num_points
'                                                arr(offset + i, n) = crv1.pointX(i)
'                                                arr(offset + i, n + 1) = crv1.PointY(i)
'                                            Next i
'
'        crv_name = str_HlHmes_curve: n = n + 2
'                                            Set crv1 = .curve(crv_name).ClonePointsToNum(num_points)
'                                            arr(offset, n) = crv1.xName
'                                            arr(offset, n + 1) = crv1.yName
'                                            For i = 1 To num_points
'                                                arr(offset + i, n) = crv1.pointX(i)
'                                                arr(offset + i, n + 1) = crv1.PointY(i)
'                                            Next i
'
'        crv_name = str_PcasHmes_curve: n = n + 2
'                                            Set crv1 = .curve(crv_name).ClonePointsToNum(num_points)
'                                            arr(offset, n) = crv1.xName
'                                            arr(offset, n + 1) = crv1.yName
'                                            For i = 1 To num_points
'                                                arr(offset + i, n) = crv1.pointX(i)
'                                                arr(offset + i, n + 1) = crv1.PointY(i)
'                                            Next i
'         crv_name = str_HLcasHmes_curve: n = n + 2
'                                            Set crv1 = .curve(crv_name).ClonePointsToNum(num_points)
'                                            arr(offset, n) = crv1.xName
'                                            arr(offset, n + 1) = crv1.yName
'                                            For i = 1 To num_points
'                                                arr(offset + i, n) = crv1.pointX(i)
'                                                arr(offset + i, n + 1) = crv1.PointY(i)
'                                            Next i
'         crv_name = str_TambHmes_curve: n = n + 2
'                                            Set crv1 = .curve(crv_name).ClonePointsToNum(num_points)
'                                            arr(offset, n) = crv1.xName
'                                            arr(offset, n + 1) = crv1.yName
'                                            For i = 1 To num_points
'                                                arr(offset + i, n) = crv1.pointX(i)
'                                                arr(offset + i, n + 1) = crv1.PointY(i)
'                                            Next i
'        If well.isESP Then
'            ' ESP curves output start here
'            crv_name = "Pcas_Hd": n = n + 2
'                                                Set crv1 = .curve(crv_name).ClonePointsToNum(num_points)
'                                                arr(offset, n) = crv1.xName
'                                                arr(offset, n + 1) = crv1.yName
'                                                For i = 1 To num_points
'                                                    arr(offset + i, n) = crv1.pointX(i)
'                                                    arr(offset + i, n + 1) = crv1.PointY(i)
'                                                Next i
'        End If
'
'
'        well_out_arr = arr
'
'    ' можно еще добавить сюда вывод кривых распределения давления и температуры по стволу и еще 4 параметров  (потом)
'    End With
'    Exit Function
'err1:
'    Resume Next
'End Function
''description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
'' Расчет устьевого давления скважины по давлению на приеме.
'' Расчет распределения давления и температуры в скважине
'' с использованием многофазных корреляций.
'Public Function wellESP_plin_pintake_atma( _
'                 ByVal q_liq_sm3day As Double, _
'                 ByVal fw_perc As Double, _
'                 ByVal pintake_atma As Double, _
'                 ByVal h_perf_m As Double, _
'        Optional ByVal p_cas_atma As Double, _
'        Optional ByVal d_choke_mm As Double, _
'        Optional ByVal str_PVT As String = PVT_DEFAULT, _
'        Optional ByVal str_AL As String = "", _
'        Optional ByVal hmes_habs_list_m As Variant = 0, _
'        Optional ByVal dtub_list_mm As Variant = 0, _
'        Optional ByVal dcas_list_mm As Variant = 0, _
'        Optional ByVal temp_list_C As Variant = 0, _
'        Optional ByVal hydr_corr As H_CORRELATION = 0, _
'        Optional ByVal temp_method As TEMP_CALC_METHOD = StartEndTemp, _
'        Optional ByVal twf_C As Double = 0, _
'        Optional ByVal c_calibr_grav = 1, _
'        Optional ByVal c_calibr_fric = 1, _
'        Optional ByVal c_calibr_choke = 1, _
'        Optional ByVal q_gas_sm3day As Double = 0, _
'        Optional ByVal param_out As Integer = 1, _
'        Optional ByVal num_pt_crv As Integer = 21)
'' Обязательные параметры
'' q_liq_sm3day - дебит жидкости в поверхностных условиях
'' fw_perc     - обводненность
'' pintake_atma- давление на приеме с которого начинается расчет, атм
''               граничное значение для проведения расчета
'' h_perf_m    - измеренная глубина пласта (перфорации)
''               точка узлового анализа при узле на забое скважины
'' p_cas_atma   - затрубное давление (расчета Ндин)
'' d_choke_mm  - диаметр штуцера
'' str_PVT     - закодированная строка с параметрами PVT.
''               если задана - перекрывает другие значения
'' str_AL      - закодированная параметров мех добычи.
''               строка параметров ЭЦН либо строка параметров газлифта
'' hmes_habs_list_m  - траектория скважины. range или таблица [0..N,0..1]
'' dtub_list_mm   - диаметр НКТ. range или таблица [0..N,0..1]
'' dcas_list_mm   - диаметр эксп колонны. range или таблица [0..N,0..1]
'' temp_list_C    - температура среды. range или таблица [0..N,0..1]
'' hydr_corr    - гидравлическая корреляция, H_CORRELATION
''                  BeggsBrill = 0
''                  Ansari = 1
''                  Unified = 2
''                  Gray = 3
''                  HagedornBrown = 4
''                  SakharovMokhov = 5
'' temp_method  - температурная модель
'' twf_C         - температура флюида на забое
''                 необходима для продвинутого учета температуры
'' c_calibr_grav - поправка на гравитационную составляющую
''               перепада давления
'' c_calibr_fric - поправка на трение в перепаде давления
'' c_calibr_choke - поправка на штуцер
'' roughness_m   - шероховатость трубы
'' q_gas_sm3day  - свободный газ поступающие в трубу.
'' param_out     - номер параметра для вывода в ячейку [0,0]
'' num_pt_crv    - число параметров вывода массивов
'' результат   - число - давление на другом конце трубы atma.
''description_end
'
'
'    Dim well As CWellESP
'    Dim pwf_atma As Double
'
'
'On Error GoTo err1:
'
''    Set well = well_load( _
''                    q_liq_sm3day , _
''                    fw_perc, _
''                    h_perf_m, _
''                    p_cas_atma, _
''                    d_choke_mm, _
''                    str_PVT, _
''                    str_AL, _
''                    hmes_habs_list_m, _
''                    dtub_list_mm, _
''                    dcas_list_mm, _
''                    temp_list_C, _
''                    hydr_corr, _
''                    temp_method, _
''                    c_calibr_grav, _
''                    c_calibr_fric, _
''                    c_calibr_choke, _
''                    , _
''                    q_gas_sm3day)
'
'    Dim res1
'    pwf_atma = well.calc_pwf_pint_atma(pintake_atma)
'    res1 = well.calc_plin_pwf_atma(pwf_atma, twf_C, saveCurve:=allCurves)
'   ' wellESP_plin_pintake_atma = well_out_arr(well, param_out, num_pt_crv)
'    'well_plin_pwf_new_atma = res1
'    Exit Function
'err1:
'    wellESP_plin_pintake_atma = Array(-1, "error")
'    addLogMsg "Error:wellESP_plin_pintake_atma:" & Err.Description
'End Function
''description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
'' Расчет забойного давления по узловому анализу,
'' скважины и пласта.
'Public Function nodal_pwf_atma( _
'             ByVal pi_sm3dayatm As Double, _
'             ByVal pres_atma As Double, _
'             ByVal fw_perc As Double, _
'             ByVal h_perf_m As Double, _
'    Optional ByVal plin_atma As Double, _
'    Optional ByVal p_cas_atma As Double, _
'    Optional ByVal d_choke_mm As Double, _
'    Optional ByVal str_PVT As String = PVT_DEFAULT, _
'    Optional ByVal str_AL As String = "", _
'    Optional ByVal hmes_habs_list_m As Variant = 0, _
'    Optional ByVal dtub_list_mm As Variant = 0, _
'    Optional ByVal dcas_list_mm As Variant = 0, _
'    Optional ByVal temp_list_C As Variant = 0, _
'    Optional ByVal hydr_corr As H_CORRELATION = 0, _
'    Optional ByVal temp_method As TEMP_CALC_METHOD = StartEndTemp, _
'    Optional ByVal twf_C As Double = 0, _
'    Optional ByVal c_calibr_grav = 1, _
'    Optional ByVal c_calibr_fric = 1, _
'    Optional ByVal c_calibr_choke = 1, _
'    Optional ByVal q_gas_sm3day As Double = 0, _
'    Optional ByVal num_pt_crv As Integer = 21)
'' Обязательные параметры
'' PI_sm3dayatm - коэффициент продуктивности
'' pres_atma   - пластовое давление
'' fw_perc     - обводненность
'' pwf_atma    - забойное давление с которого начинается расчет, атм
''               граничное значение для проведения расчета
'' h_perf_m    - измеренная глубина пласта (перфорации)
''               точка узлового анализа при узле на забое скважины
'' p_cas_atma   - затрубное давление (расчета Ндин)
'' d_choke_mm  - диаметр штуцера
'' str_PVT     - закодированная строка с параметрами PVT.
''               если задана - перекрывает другие значения
'' str_AL      - закодированная параметров мех добычи.
''               строка параметров ЭЦН либо строка параметров газлифта
'' hmes_habs_list_m -траектория скважины. range или таблица [0..N,0..1]
'' dtub_list_mm   - диаметр НКТ. range или таблица [0..N,0..1]
'' dcas_list_mm   - диаметр эксп колонны. range или таблица [0..N,0..1]
'' temp_list_C    - температура среды. range или таблица [0..N,0..1]
'' hydr_corr    - гидравлическая корреляция, H_CORRELATION
''                  BeggsBrill = 0
''                  Ansari = 1
''                  Unified = 2
''                  Gray = 3
''                  HagedornBrown = 4
''                  SakharovMokhov = 5
'' temp_method  - температурная модель
'' twf_C         - температура флюида на забое
''                 необходима для продвинутого учета температуры
'' c_calibr_grav - поправка на гравитационную составляющую
''               перепада давления
'' c_calibr_fric - поправка на трение в перепаде давления
'' c_calibr_choke - поправка на штуцер
'' q_gas_sm3day  - свободный газ поступающие в трубу.
'' num_pt_crv    - число параметров вывода массивов
'' результат   - число - давление на другом конце трубы atma.
''description_end
'
'
'    Dim PS As New CProdSys
'    Dim well As IWell
'    Dim res As New CReservoirVogel
'
'    Dim pwf_atma As Double
'    Dim pb_atma As Double
'    Dim arr
'    Dim i As Integer
'
'
'On Error GoTo err1:
'
'    Set well = well_load( _
'                    , _
'                    fw_perc, _
'                    h_perf_m, _
'                    p_cas_atma, _
'                    d_choke_mm, _
'                    str_PVT, _
'                    str_AL, _
'                    hmes_habs_list_m, _
'                    dtub_list_mm, _
'                    dcas_list_mm, _
'                    temp_list_C, _
'                    hydr_corr, _
'                    temp_method, _
'                    c_calibr_grav, _
'                    c_calibr_fric, _
'                    c_calibr_choke, _
'                    , _
'                    q_gas_sm3day)
'
'    pb_atma = well.fluid.pb_atma
'
'    If pb_atma <= 0 Then pb_atma = 0   ' поставим ноль иначе флюид додсчитает по корреляции значение
'
'    res.InitProp pres_atma, pb_atma, fw_perc
'    res.pi_sm3dayatm = pi_sm3dayatm
'
'    Set PS.Reservoir = res
'    Set PS.well = well
'
'    Call PS.calc_nodal(plin_atma)
'
'    ReDim arr(1 To num_pt_crv + 4, 1 To 3)
'    arr(1, 1) = PS.p_wfsol_atma
'    arr(1, 2) = PS.qsol_scm3day
'
'    arr(2, 1) = "p_wfsol_atma"
'    arr(2, 2) = "qsol_scm3day"
'
'
'On Error Resume Next
'    Dim crv1 As CInterpolation
'    Dim crv_name As String
'    Dim n As Integer
'    Dim offset As Integer
'    n = 1
'    offset = 3
'    crv_name = "c_p_linQl_curves_":
'    Set crv1 = PS.curve(crv_name).ClonePointsToNum(num_pt_crv)
'    arr(offset, n + 1) = crv1.xName
'    arr(offset, n + 2) = crv1.yName
'    For i = 1 To num_pt_crv
'        arr(offset + i, n) = i
'        arr(offset + i, n + 1) = crv1.pointX(i)
'        arr(offset + i, n + 2) = crv1.PointY(i)
'    Next i
'
'
'    nodal_pwf_atma = arr
'
'    Exit Function
'err1:
'    nodal_pwf_atma = Array(-1, "error")
'    addLogMsg "Error:nodal_pwf_atma:" & Err.Description
'End Function
'' функция адаптации модели скважины по данным эксплуатации
'' подбирает коэффициента деградации УЭЦН и штуцера
'' по замера на поверхности и на забое/приеме насоса
'Public Function well_calc_calibr_head_fr( _
'                     ByVal q_m3day As Double, _
'                     ByVal fw_perc As Double, _
'                     ByVal pdown_atma As Double, _
'                     ByVal pbuf_atma As Double, _
'            Optional Pdown_at_intake As Boolean = False, _
'            Optional ByVal plin_atma As Double = -1, _
'            Optional ByVal p_cas_atma As Double = -1, _
'            Optional ByVal str_well As String = WELL_DEFAULT, _
'            Optional ByVal str_PVT As String = PVT_DEFAULT, _
'            Optional ByVal str_ESP As String = 0, _
'            Optional ByVal hydr_corr As H_CORRELATION = 0, _
'            Optional ByVal ksep_fr As Double = -1, _
'            Optional ByVal c_calibr_head_d As Double = 1, _
'            Optional ByVal param_num As Integer = 0)
'' исходные параметры
'' q_m3day    - дебит жидкости, на поверхности
'' fw_perc    - обводненность (объемная на поверхности)
'' Pdown_atma - давление ниже насоса (внизу) для расчета
''     либо забойное давление (по умолчанию)
''     либо давление на приеме
''     определяется опциональным параметром Pdown_at_intake
'' pbuf_atma  - буферное давление
''
'' Pdown_at_intake - флаг определяет точку расчета давления
''                   ниже насоса. По умолчанию забойное
'' plin_atma - линейное давление
''             если не задано штуцер не учитывается
'' p_cas_atma - затрубное давление
''     если не задано динамический уровень не рассчитывается
'' str_well  - закодированные параметры конструкции скважины.
''           Если не указано,
''           используются свойства скважины по умолчанию.
'' str_PVT - закодированные параметры флюидов. Если не указано,
''          используются свойства флюида по умолчанию.
'' str_ESP - закодированные параметры УЭЦН. Если
''          не задано или задано значение 0
''          то УЭЦН не учитывается, проводится расчет для
''          фонтанирующей скважины.
'' hydr_corr      - гидравлическая корреляция, H_CORRELATION
''                   BeggsBrill = 0
''                   Ansari = 1
''                   Unified = 2
''                   Gray = 3
''                   HagedornBrown = 4
''                   SakharovMokhov = 5
'' ksep_fr - коэффициент сепарации.
''           если задан - то используется вместо расчетного
''           явное задание коэффициента серации ускоряет расчет
'' c_calibr_head_d - коэффициент деградации УЭЦН
'' param_num - параметры для вывода в качестве результата
''             если не задан выводятся все в виде массива
'' ----------- результаты расчета
'' массив параметры работы системы пласт - скважина - УЭЦН
'
'    Dim well As CWellESP
'    Dim pwf_temp_atma As Double
'    Dim ar
'On Error GoTo err1:
'    ' read all data to well object
'    Set well = well_init_data(q_m3day, fw_perc, p_cas_atma, _
'                             str_well, str_PVT, str_ESP, hydr_corr, ksep_fr, c_calibr_head_d)
'    ' calc BHP if needed from intake pressure
'    If Pdown_at_intake Then
'        pwf_temp_atma = well.calc_pwf_pint_atma(pdown_atma)
'    Else
'        pwf_temp_atma = pdown_atma
'    End If
'    ' проведем расчет
'    If well.calc_well(plin_atma, pbuf_atma, pwf_temp_atma, p_cas_atma) Then
'    ' в качестве результата выведем ряд расчитанных значений давления
'        well_calc_calibr_head_fr = well_out_arr(well, param_num)
'    Else
'        well_calc_calibr_head_fr = "c_calibr_head not found. Check log for details"
'    End If
'    Exit Function
'err1:
'    Dim errmsg As String
'    errmsg = "well_calc_calibr_head_fr: error" & sDELIM & Err.Description
'    addLogMsg errmsg
'    well_calc_calibr_head_fr = errmsg
'
'End Function
'
'' функция расчета забойного давления скважины по динамическому уровню
'Public Function well_pwf_hdyn_atma( _
'                     ByVal q_m3day As Double, _
'                     ByVal fw_perc As Double, _
'                     ByVal p_cas_atma As Double, _
'                     ByVal h_dyn_m As Double, _
'            Optional ByVal str_well As String = WELL_DEFAULT, _
'            Optional ByVal str_PVT As String = PVT_DEFAULT, _
'            Optional ByVal str_ESP As String = 0, _
'            Optional ByVal hydr_corr As H_CORRELATION = 0, _
'            Optional ByVal ksep_fr As Double = 0, _
'            Optional ByVal c_calibr_head_d As Double = 1, _
'            Optional ByVal param_num As Integer = 0)
'' исходные параметры
'' q_m3day   - дебит жидкости, на поверхности
'' fw_perc   - обводненность (объемная на поверхности)
'' p_cas_atma - затрубное давление
'' h_dyn_m    - динамический уровень (при данном затрубном)
''
'' str_well  - закодированные параметры конструкции скважины.
''           Если не указано,
''           используются свойства скважины по умолчанию.
'' str_PVT - закодированные параметры флюидов. Если не указано,
''          используются свойства флюида по умолчанию.
'' str_ESP - закодированные параметры УЭЦН. Если
''          не задано или задано значение 0
''          то УЭЦН не учитывается, проводится расчет для
''          фонтанирующей скважины.
'' hydr_corr      - гидравлическая корреляция, H_CORRELATION
''                   BeggsBrill = 0
''                   Ansari = 1
''                   Unified = 2
''                   Gray = 3
''                   HagedornBrown = 4
''                   SakharovMokhov = 5
'' ksep_fr   - коэффициент сепарации.
''           если задан - то используется вместо расчетного
''           явное задание коэффициента серации ускоряет расчет
'' c_calibr_head_d   - коэффициент деградации УЭЦН
'' param_num - параметры для вывода в качестве результата
''             если не задан выводятся все в виде массива
'' ----------- результаты расчета
'' массив параметры работы системы пласт - скважина - УЭЦН
'
'    Dim well As CWellESP
'    Set well = well_init_data(q_m3day, fw_perc, p_cas_atma, _
'                             str_well, str_PVT, str_ESP, hydr_corr, ksep_fr, c_calibr_head_d)
'
'    Call well.calc_pwf_pcas_hdyn_atma(p_cas_atma, h_dyn_m, well.t_bh_C)          ' проведем расчет
'    ' в качестве результата выведем ряд расчитанных значений давления
'    Dim ar
'    well_pwf_hdyn_atma = well_out_arr(well, param_num)
'
'End Function
Public Sub read_calibr(ByVal c_calibr, _
                         Optional ByRef c_calibr_1 As Double, _
                         Optional ByRef c_calibr_2 As Double, _
                         Optional ByRef c_calibr_3 As Double)
    c_calibr_1 = 1
    c_calibr_2 = 1
    c_calibr_3 = 1
    Dim clbr
    ' set calibration properties
    clbr = array1d_from_range(c_calibr, num_only:=True, no_zero:=False)
    c_calibr_1 = clbr(1)
    If UBound(clbr) >= 2 Then
        c_calibr_2 = clbr(2)
    Else
        c_calibr_2 = 1
    End If
    If UBound(clbr) >= 3 Then
        c_calibr_3 = clbr(3)
    Else
        c_calibr_3 = 1
    End If
End Sub

