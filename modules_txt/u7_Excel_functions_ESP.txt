''=======================================================================================
''Unifloc 7.27 primavera                                          khabibullin.ra@gubkin.ru
''Petroleum engineering calculations modules (macroses)
''2000 - 2021
''
''=======================================================================================
'' функции для проведения расчетов по режимам работы УЭЦН из интерфейса Excel
'
Option Explicit
'
''=======================================================
''--------------------- ЭЦН -----------------------
''=======================================================
'
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' номинальный напор ЭЦН (на основе каталога ЭЦН)
' учитывается поправка на вязкость
Public Function ESP_head_m( _
        ByVal qliq_m3day As Double, _
        Optional ByVal num_stages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal pump_id As Long, _
        Optional ByVal mu_cSt As Double = -1, _
        Optional ByVal param As String)
' qliq_m3day - дебит жидкости в условиях насоса (стенд)
' num_stages  - количество ступеней
' freq_Hz    - частота вращения насоса
' pump_id    - номер насоса в базе данных
' mu_cSt     - вязкость жидкости, сСт;
' param      - дополнительные параметры расчета потока
'description_end
On Error GoTo err1:
    Dim esp As New CESPpump
        Call esp.set_ID(pump_id)
        If esp Is Nothing Then
            ESP_head_m = 0
            Exit Function
        End If
    
    With esp
    '    Dim c_calibr_head As Double
    '    Dim c_calibr_rate As Double
    '    Dim c_calibr_power As Double
    '    Call read_ESP_calibr(c_calibr, c_calibr_head, c_calibr_rate, c_calibr_power)
    
        ' read param
        Dim prmd As Dictionary
        If Len(param) > 1 Then
            Set prmd = ParseJson(param)
        Else
            Set prmd = New Dictionary
        End If
        If prmd Is Nothing Then
            .addLogMsg "info: no param found, default settings applied" 'todo obsolete
        End If
                
        If prmd.Exists(prm_esp_calibr_head) Then
            .c_calibr_head = prmd(prm_esp_calibr_head)
        Else
            .c_calibr_head = 1
        End If
        If prmd.Exists(prm_esp_calibr_rate) Then
            .c_calibr_rate = prmd(prm_esp_calibr_rate)
        Else
            .c_calibr_rate = 1
        End If
        
        If prmd.Exists(prm_esp_calibr_power) Then
            .c_calibr_power = prmd(prm_esp_calibr_power)
        Else
            .c_calibr_power = 1
        End If
    
    
        .freq_Hz = freq_Hz
        .stage_num = num_stages
        qliq_m3day = qliq_m3day / .c_calibr_rate
        ESP_head_m = .get_ESP_head_m(qliq_m3day, num_stages, mu_cSt)
        ESP_head_m = ESP_head_m * .c_calibr_head
    End With
    Exit Function
err1:
    ESP_head_m = -1
    addLogMsg "Error:ESP_head_m:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' номинальная мощность потребляемая ЭЦН с вала (на основе каталога ЭЦН)
' учитывается поправка на вязкость
Public Function ESP_power_W( _
        ByVal qliq_m3day As Double, _
        Optional ByVal num_stages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal pump_id As Long = 737, _
        Optional ByVal mu_cSt As Double = -1, _
        Optional ByVal param As String)
' мощность УЭЦН номинальная потребляемая
' qliq_m3day - дебит жидкости в условиях насоса (стенд)
' num_stages  - количество ступеней
' freq_Hz       - частота вращения насоса
' pump_id     - номер насоса в базе данных
' mu_cSt     - вязкость жидкости
' param      - дополнительные параметры расчета потока
'description_end
On Error GoTo err1:
    Dim esp As New CESPpump
    Call esp.set_ID(pump_id)
    If esp Is Nothing Then
        ESP_power_W = 0
        Exit Function
    End If
    With esp
    '    Dim c_calibr_head As Double
    '    Dim c_calibr_rate As Double
    '    Dim c_calibr_power As Double
    '    Call read_ESP_calibr(c_calibr, c_calibr_head, c_calibr_rate, c_calibr_power)
        ' read param
        Dim prmd As Dictionary
        If Len(param) > 1 Then
            Set prmd = ParseJson(param)
        Else
            Set prmd = New Dictionary
        End If
        If prmd Is Nothing Then
            .addLogMsg "info: no param found, default settings applied" 'todo obsolete
        End If
                
        If prmd.Exists(prm_esp_calibr_head) Then
            .c_calibr_head = prmd(prm_esp_calibr_head)
        Else
            .c_calibr_head = 1
        End If
        If prmd.Exists(prm_esp_calibr_rate) Then
            .c_calibr_rate = prmd(prm_esp_calibr_rate)
        Else
            .c_calibr_rate = 1
        End If
        
        If prmd.Exists(prm_esp_calibr_power) Then
            .c_calibr_power = prmd(prm_esp_calibr_power)
        Else
            .c_calibr_power = 1
        End If
    
    
        .freq_Hz = freq_Hz
        .stage_num = num_stages
        qliq_m3day = qliq_m3day / .c_calibr_rate
        ESP_power_W = .get_ESP_power_W(qliq_m3day, num_stages, mu_cSt)
        ESP_power_W = ESP_power_W * .c_calibr_power
    End With
    Exit Function
err1:
    ESP_power_W = -1
    addLogMsg "Error:ESP_power_W:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' номинальный КПД ЭЦН (на основе каталога ЭЦН)
' учитывается поправка на вязкость
Public Function ESP_eff_fr( _
        ByVal qliq_m3day As Double, _
        Optional ByVal num_stages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal pump_id As Long = 737, _
        Optional ByVal mu_cSt As Double = -1, _
        Optional ByVal param As String)
' qliq_m3day - дебит жидкости в условиях насоса (стенд)
' num_stages  - количество ступеней
' freq_Hz       - частота вращения насоса
' pump_id     - номер насоса в базе данных
' mu_cSt     - вязкость жидкости
' param      - дополнительные параметры расчета потока
'description_end
On Error GoTo err1:
    Dim esp As New CESPpump
    Call esp.set_ID(pump_id)
    If esp Is Nothing Then
        ESP_eff_fr = 0
        Exit Function
    End If
    With esp
    '    Dim c_calibr_head As Double
    '    Dim c_calibr_rate As Double
    '    Dim c_calibr_power As Double
    '    Call read_ESP_calibr(c_calibr, c_calibr_head, c_calibr_rate, c_calibr_power)
    
        Dim prmd As Dictionary
        If Len(param) > 1 Then
            Set prmd = ParseJson(param)
        Else
            Set prmd = New Dictionary
        End If
        If prmd Is Nothing Then
            .addLogMsg "info: no param found, default settings applied" 'todo obsolete
        End If
                    
        If prmd.Exists(prm_esp_calibr_head) Then
            .c_calibr_head = prmd(prm_esp_calibr_head)
        Else
            .c_calibr_head = 1
        End If
        If prmd.Exists(prm_esp_calibr_rate) Then
            .c_calibr_rate = prmd(prm_esp_calibr_rate)
        Else
            .c_calibr_rate = 1
        End If
        
        If prmd.Exists(prm_esp_calibr_power) Then
            .c_calibr_power = prmd(prm_esp_calibr_power)
        Else
            .c_calibr_power = 1
        End If
    
        
        .freq_Hz = freq_Hz
        .stage_num = num_stages
        qliq_m3day = qliq_m3day / .c_calibr_rate
        esp.correct_visc = True
        ESP_eff_fr = .get_ESP_effeciency_fr(qliq_m3day, mu_cSt)
        ESP_eff_fr = ESP_eff_fr * .c_calibr_head * .c_calibr_rate / .c_calibr_power
    End With
    Exit Function
err1:
    ESP_eff_fr = -1
    addLogMsg "Error:ESP_eff_fr:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' название ЭЦН по номеру
Public Function ESP_name(Optional ByVal pump_id As Long) As String
' pump_id    - идентификатор насоса в базе данных
' результат - название насоса
'description_end
On Error GoTo err1:
    Dim esp As New CESPpump
    Call esp.set_ID(pump_id)
    If esp Is Nothing Then
        ESP_name = "no name"
        Exit Function
    End If
    ESP_name = esp.db.name
    Exit Function
err1:
    ESP_name = -1
    addLogMsg "Error:ESP_name:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' максимальный дебит ЭЦН для заданной частоты
' по номинальной кривой РНХ
Public Function ESP_rate_max_sm3day( _
    Optional ByVal freq_Hz As Double = 50, _
    Optional ByVal pump_id As Long, _
    Optional ByVal mu_cSt As Double = -1) As Double
' freq_Hz   - частота вращения ЭЦН
' pump_id    - идентификатор насоса в базе данных
'description_end
On Error GoTo err1:
    Dim esp As New CESPpump
    Call esp.set_ID(pump_id)
    If esp Is Nothing Then
        ESP_rate_max_sm3day = 0
        Exit Function
    End If
    esp.freq_Hz = freq_Hz
    ESP_rate_max_sm3day = esp.rate_max_sm3day(mu_cSt)
    Exit Function
err1:
    ESP_rate_max_sm3day = -1
    addLogMsg "Error:ESP_rate_max_sm3day:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' оптимальный дебит ЭЦН для заданной частоты
' по номинальной кривой РНХ
Public Function ESP_optRate_m3day( _
    Optional ByVal freq_Hz As Double = 50, _
    Optional ByVal pump_id As Long) As Double
' freq_Hz   - частота вращения ЭЦН
' pump_id    - идентификатор насоса в базе данных
'description_end
On Error GoTo err1:
    Dim esp As New CESPpump
    Call esp.set_ID(pump_id)
    If esp Is Nothing Then
        ESP_optRate_m3day = 0
        Exit Function
    End If
    esp.freq_Hz = freq_Hz
    ESP_optRate_m3day = esp.rate_nom_sm3day
    Exit Function
err1:
    ESP_optRate_m3day = -1
    addLogMsg "Error:ESP_optRate_m3day:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция возвращает идентификатор типового насоса по значению
' номинального дебита
Public Function ESP_id_by_rate(q As Double)
' возвращает ID в зависимости от номинального дебита.
' насосы подобраны вручную из текущей базы.
' Q - номинальный дебит
'description_end
    If q > 0 And q < 20 Then ESP_id_by_rate = 738: ' ЭЦН5-15
    If q >= 20 And q < 40 Then ESP_id_by_rate = 740: ' ЭЦН5-30
    If q >= 40 And q < 60 Then ESP_id_by_rate = 1005: ' ЭЦН5-50
    If q >= 60 And q < 100 Then ESP_id_by_rate = 1006: ' ЭЦН5-80
    If q >= 100 And q < 150 Then ESP_id_by_rate = 737: ' ЭЦН5-125
    If q >= 150 And q < 250 Then ESP_id_by_rate = 748: ' ЭЦН5A-200
    If q >= 250 And q < 350 Then ESP_id_by_rate = 750: ' ЭЦН5A-320Э
    If q >= 350 And q < 600 Then ESP_id_by_rate = 753: ' ЭЦН5А-500
    If q >= 600 And q < 800 Then ESP_id_by_rate = 754: ' ЭЦН5А-700
    If q >= 800 And q < 1200 Then ESP_id_by_rate = 755: ' ЭЦН6-1000
    If q > 1200 Then ESP_id_by_rate = 758
End Function
'description_end
'
'=======================================================
'--------------- Вспомогательные функции ---------------
'=======================================================
'Private Sub read_ESP_calibr(ByVal c_calibr, _
'                            ByRef c_calibr_head As Double, _
'                            ByRef c_calibr_rate As Double, _
'                            ByRef c_calibr_power As Double)
'
'
'    c_calibr_head = 1
'    c_calibr_rate = 1
'    c_calibr_power = 1
'
'
'    Dim clbr
'
'    ' set calibration properties
'    clbr = array1d_from_range(c_calibr, num_only:=True, no_zero:=False)
'    c_calibr_head = clbr(1)
'    If UBound(clbr) >= 2 Then
'        c_calibr_rate = clbr(2)
'    Else
'        c_calibr_rate = 1
'    End If
'
'    If UBound(clbr) >= 3 Then
'        c_calibr_power = clbr(3)
'    Else
'        c_calibr_power = 1
'    End If
'
'
'End Sub
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
'функция расчета давления на выходе/входе ЭЦН в рабочих условиях
Public Function ESP_p_atma( _
                 ByVal p_calc_atma As Double, _
        Optional ByVal t_intake_C As Double = 50, _
        Optional ByVal feed As String = "", _
        Optional ByVal pump_id As Long, _
        Optional ByVal num_stages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal t_dis_C As Double = 50, _
        Optional ByVal calc_along_flow As Boolean = 1, _
        Optional ByVal param As String)
' p_calc_atma       - давление для которого делается расчет
'                     либо давление на приеме насоса
'                     либо давление на выкиде насоса
'                     определяется параметром calc_along_flow
' t_intake_C        - температура на приеме насоcа
' feed      - параметры потока флюидов json строка. Используйте
'           функцию encode_feed() для генерации
' pump_id           - идентификатор насоса
' num_stages        - количество ступеней
' freq_Hz           - частота вращения вала ЭЦН, Гц
' t_dis_C            - температура на выкиде насоса.
'                     если = 0 и calc_along_flow = 1 то рассчитывается
' calc_along_flow    - режим расчета снизу вверх или сверху вниз
'                 calc_along_flow = True => p_atma давление на приеме
'                 calc_along_flow = False => p_atma давление на выкиде
' param     - дополнительные параметры расчета потока
' результат   - массив значений включающий
'description_end
' ESP_gas_correct  - деградация по газу:
'      0 - 2 задает значение вручную;
'      10 стандартный ЭЦН (предел 25%);
'      20 ЭЦН с газостабилизирующим модулем (предел 50%);
'      30 ЭЦН с осевым модулем (предел 75%);
'      40 ЭЦН с модифицированным ступенями (предел 40%).
'      110+, тогда модель n-100 применяется ко всем ступеням отдельно
'         Предел по доле газа на входе в насос после сепарации
'         на основе статьи SPE 117414 (с корректировкой)
'         поправка дополнительная к деградации (суммируется).
' c_calibr  - коэффициент поправки на напор.
'       если массив то второе значение - поправыка на подачу (множитель)
'       третье на мощность (множитель)
' dnum_stages_integrate - шаг интегрирования ЭЦН
'           если >1 будет быстрее но менее точно
' out_curves_num_points - количество точек для вывода значений
'                   по ступеням
' num_value       - значение которое будет выводиться первым
' q_gas_sm3day    - свободный газ в потоке
    Dim arr
    Dim esp As New CESPpump
    Dim out_curves_num_points As Integer
    
On Error GoTo er1:
    ' get ESP from database
    Call esp.set_ID(pump_id)
    
    If esp Is Nothing Then
        ESP_p_atma = "no ESP"
        Exit Function
    End If
    
    If Len(feed) < 2 Then feed = encode_feed()
    
    ' read param
    Dim prmd As Dictionary
    If Len(param) > 1 Then
        Set prmd = ParseJson(param)
    Else
        Set prmd = New Dictionary
    End If
    If prmd Is Nothing Then
        esp.addLogMsg "info: no param found, default settings applied" 'todo obsolete
    End If
    
    
    With esp
        Call .fluid.init_feed(feed)  ' initialize PVT properties
                
        If prmd.Exists(prm_esp_calibr_head) Then
            .c_calibr_head = prmd(prm_esp_calibr_head)
        Else
            .c_calibr_head = 1
        End If
        If prmd.Exists(prm_esp_calibr_rate) Then
            .c_calibr_rate = prmd(prm_esp_calibr_rate)
        Else
            .c_calibr_rate = 1
        End If
        
        If prmd.Exists(prm_esp_calibr_power) Then
            .c_calibr_power = prmd(prm_esp_calibr_power)
        Else
            .c_calibr_power = 1
        End If
         
        If prmd.Exists(prm_esp_gas_correct) Then
            .gas_correct = prmd(prm_esp_gas_correct)
        End If
        
        .freq_Hz = freq_Hz
        .stage_num = num_stages
        
        If prmd.Exists(prm_dnum_stages_integrate) Then
            .dnum_stages_integrate = prmd(prm_dnum_stages_integrate)
        Else
            .dnum_stages_integrate = 10
        End If
                 
        Call .calc_ESP(p_calc_atma, t_intake_C, t_dis_C, calc_along_flow, saveCurve:=True)
         
        
        If prmd.Exists(prm_out_curves_num_points) Then
            out_curves_num_points = prmd(prm_out_curves_num_points)
        Else
            out_curves_num_points = 20
        End If
         
        arr = .array_out(out_curves_num_points)
        
        If calc_along_flow Then
            arr(0, 0) = .p_dis_atma
            arr(1, 0) = "p_dis_atma"
        Else
            arr(0, 0) = .p_int_atma
            arr(1, 0) = "p_intake_atma"
        End If
    End With
    
    arr(0, 0) = arr(0, 0)
    arr(1, 0) = arr(1, 0)
    
    ESP_p_atma = arr
    Exit Function
er1:
    ESP_p_atma = "error"
    addLogMsg "Error:ESP_dp_atm:" & Err.Description
    
End Function

