'=======================================================================================
'Unifloc 7.41 year 2023                                  khabibullinra@gmail.com
'Petroleum engineering calculations modules (macroses)
'2000 - 2023
'
'=======================================================================================
' Functions for the Excel ribbon buttons
Option Base 0
Option Explicit
Sub btn_ribbon_version(control As IRibbonControl)
    Application.StatusBar = "Сработала функция onAction элемента " + control.ID
    Call InfoForm.Show
    Application.StatusBar = ""
End Sub
Sub btn_ribbon_links(control As IRibbonControl)
    Dim num As Integer
    add_log_msg "Сработала функция onAction элемента " + control.ID
    num = correct_links
    add_log_msg "Выполнено замен " & CStr(num)
End Sub
Sub btn_ribbon_pvt(control As IRibbonControl)
    Dim num As Integer
    Call insert_PVT
End Sub
Sub btn_ribbon_feed(control As IRibbonControl)
    Dim num As Integer
    Call insert_feed
End Sub
Sub btn_ribbon_ipr(control As IRibbonControl)
    Call insert_IPR
End Sub
Sub btn_ribbon_ipr_chart(control As IRibbonControl)
    Call insert_IPR_curve
End Sub
Sub btn_ribbon_constr(control As IRibbonControl)
    Call insert_pipe_construction
End Sub
Sub btn_ribbon_calc_pipe(control As IRibbonControl)
    Call insert_pipe_calc
End Sub
Sub btn_ribbon_tmodel(control As IRibbonControl)
    Call insert_t_model
End Sub
' A solution to fix the problem with add-on paths
' https://www.planetaexcel.ru/forum/index.php?PAGE_NAME=message&FID=8&TID=10450&TITLE_SEO=10450&MID=91949#message91949
' Called by pressing a button on the ribbon
Public Function correct_links()
 Dim wb As Workbook
 Dim MyAddIn, Lnk, sh
 Dim MyAddInNameFull
 Dim aLinks
 Dim wname As String
 Dim i As Integer
 i = 0
 wname = "unknown"
 
 On Error GoTo exit_
 
  ' Define the name of the add-in
 MyAddIn = UCase(ThisWorkbook.name)
 MyAddInNameFull = ThisWorkbook.Path & "\" & ThisWorkbook.name
 Set wb = ActiveWorkbook ' work with the active workbook
 If Not wb Is Nothing Then
    With wb
       wname = wb.name
       aLinks = wb.LinkSources()
       If Not IsEmpty(aLinks) Then
            For Each Lnk In .LinkSources(Type:=xlExcelLinks)
                Debug.Print Lnk
                 Debug.Print UCase(Lnk), "*" & MyAddIn
              If UCase(Lnk) Like "*" & MyAddIn Then
                add_log_msg "an add-in reference " & wb.name & " was found in the book " & Lnk
                If UCase(Lnk) <> UCase(MyAddInNameFull) Then
                    add_log_msg "in the book " & wb.name & " trying to correct the link " & Lnk & " to the correct " & MyAddInNameFull
                    .ChangeLink name:=Lnk, NewName:=MyAddIn
                    i = i + 1
                    For Each sh In .Worksheets
                      sh.Calculate
                    Next
                Else
                    add_log_msg "in book " & wb.name & " reference " & Lnk & " correct, no correction needed"
                End If
              End If
            Next
        End If
    End With
    correct_links = i
 Else
    GoTo exit_
 End If
 Exit Function
 
exit_:
    MsgBox "Error. Something went wrong when fixing the add-in links."
    add_log_msg "Error. In the book " & wname & " something went wrong when fixing the add-in links."
End Function
Sub insert_pipe_calc()
    
    Dim arr(0 To 17, 0 To 1)
    
    arr(0, 0) = "p_atma": arr(0, 1) = 25
    arr(1, 0) = "t_C": arr(1, 1) = 30
    arr(2, 0) = "construction": arr(2, 1) = "=encode_pipe()"
    arr(3, 0) = "feed": arr(3, 1) = "=encode_feed()"
    arr(4, 0) = "t_model": arr(4, 1) = "=encode_t_model()"
    arr(5, 0) = "calc_along_coord": arr(5, 1) = 1
    arr(6, 0) = "flow_along_coord": arr(6, 1) = 0
    arr(7, 0) = "flow_correlation": arr(7, 1) = 0
    arr(8, 0) = "calibr_grav": arr(8, 1) = 1
    arr(9, 0) = "calibr_fric": arr(9, 1) = 1
    arr(10, 0) = "param": arr(10, 1) = "{""show_array"":1}"
    arr(11, 0) = "h_start_m": arr(11, 1) = ""
    arr(12, 0) = "h_end_m": arr(12, 1) = ""
    arr(13, 0) = "znlf": arr(13, 1) = ""
    arr(14, 0) = "q_liq_sm3day": arr(14, 1) = ""
    arr(15, 0) = "fw_perc": arr(15, 1) = ""
    arr(16, 0) = "rp_m3m3": arr(16, 1) = ""
    arr(17, 0) = "q_gas_free_sm3day": arr(17, 1) = ""
    
    ActiveCell.range("A1:B18") = arr
    ActiveCell.range("A19:H41").Select
    Selection.FormulaArray = "=MF_pipe_p_atma(R[-18]C[1], R[-17]C[1], R[-16]C[1], R[-15]C[1], R[-14]C[1], R[-13]C[1], R[-12]C[1], R[-11]C[1], R[-10]C[1], R[-9]C[1], R[-8]C[1], R[-7]C[1], R[-6]C[1], R[-5]C[1], R[-4]C[1], R[-3]C[1], R[-2]C[1], R[-1]C[1])"
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 65535
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.NumberFormat = "0"
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    ActiveCell.Select
    Dim Chart1 As Chart
    Dim diag
    Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    Set Chart1 = diag.Chart
    With Chart1
        .ChartArea.ClearContents
        .ChartType = xlXYScatterLines
        .SeriesCollection.NewSeries
        'Change to what your series should be called
        .SeriesCollection(1).name = "=""Pressure"""
        .SeriesCollection(1).XValues = ActiveCell.range("C4:C23")
        .SeriesCollection(1).Values = ActiveCell.range("A4:A23")
        .Axes(xlValue).ReversePlotOrder = True
        
        .Parent.Top = ActiveCell.Cells(1, 9).Top
        .Parent.Left = ActiveCell.Cells(1, 9).Left
        .Parent.Height = ActiveCell.Cells(1, 9).range("L1:P23").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 9).range("L1:P23").WIDTH
        
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "Hmes, m"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "P, atma"
        
    End With
    
    Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    Set Chart1 = diag.Chart
    With Chart1
        .ChartArea.ClearContents
        .ChartType = xlXYScatterLines
        .ChartTitle.Text = "Temperature"
        
        .SeriesCollection.NewSeries
        .SeriesCollection(1).name = "=""Temperature"""
        .SeriesCollection(1).XValues = ActiveCell.range("D4:D23")
        .SeriesCollection(1).Values = ActiveCell.range("B4:B23")
        
        .SeriesCollection.NewSeries
        .SeriesCollection(2).name = "=""Ambient Temperature"""
        .SeriesCollection(2).XValues = ActiveCell.range("E4:E23")
        .SeriesCollection(2).Values = ActiveCell.range("B4:B23")
        .Axes(xlValue).ReversePlotOrder = True
        
        .Parent.Top = ActiveCell.Cells(1, 9).Top
        .Parent.Left = ActiveCell.Cells(1, 14).Left
        .Parent.Height = ActiveCell.Cells(1, 9).range("L1:P23").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 9).range("L1:P23").WIDTH
        
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "Hvert, m"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "T, C"
    End With
End Sub
Sub insert_pipe_construction()
    Dim arr(0 To 5, 0 To 3)
    
    arr(0, 0) = "trajectory"
    arr(1, 0) = "hmes, m": arr(1, 1) = "hvert, m"
    arr(2, 0) = 0: arr(2, 1) = 0
    arr(3, 0) = 1000: arr(3, 1) = 1000
    arr(4, 0) = 2000: arr(4, 1) = 1900
    arr(5, 0) = 2500: arr(5, 1) = 2300
    
    
    arr(0, 2) = "diameter"
    arr(1, 2) = "hmes, m": arr(1, 3) = "diam, mm"
    arr(2, 2) = 0: arr(2, 3) = 62
    arr(3, 2) = 500: arr(3, 3) = 72
    arr(4, 2) = 2100: arr(4, 3) = 125
    ActiveCell.range("A2:D7") = arr
    ActiveCell = "construction"
    ActiveCell.range("B1").FormulaR1C1 = "=encode_pipe(R[3]C[-1]:R[6]C,R[3]C[1]:R[6]C[2])"
    ActiveCell.range("B1").name = get_name("pipe_construction")
    ActiveCell.range("B1").Select
End Sub
Sub insert_t_model()
    Dim arr(0 To 5, 0 To 1)
    
    arr(0, 0) = "ambient temperature"
    arr(1, 0) = "hvert, m": arr(1, 1) = "t amb, C"
    arr(2, 0) = 0: arr(2, 1) = 10
    arr(3, 0) = 1000: arr(3, 1) = 35
    arr(4, 0) = 2000: arr(4, 1) = 80
    arr(5, 0) = 2500: arr(5, 1) = 90
    
    
    ActiveCell.range("A2:B7") = arr
    ActiveCell = "t model"
    
    ActiveCell.range("B1").FormulaR1C1 = "=encode_t_model(1,R[3]C[-1]:R[6]C)"
    ActiveCell.range("B1").name = get_name("t_model")
    ActiveCell.range("B1").Select
End Sub
Function get_name(base_name As String) As String
    Dim nms
    Dim name_done As Boolean
    Dim i As Integer
    Dim iname As Integer
    Dim isafe As Integer
    Dim set_name As String
    
    set_name = base_name
    name_done = False
    iname = 1
    isafe = 1
    Set nms = ActiveWorkbook.Names
    
    Do
        For i = 1 To nms.Count
            If nms(i).name = set_name Then
                set_name = base_name & "_" & CStr(iname)
                iname = iname + 1
                Exit For
            End If
            If i = nms.Count Then name_done = True
        Next i
        isafe = isafe + 1
        If isafe = 10000 Then
            set_name = base_name & "_error_" & CStr(iname)
            Exit Do
        End If
    Loop Until name_done
    
    get_name = set_name
End Function
Sub insert_IPR()
    Dim arr(0 To 8, 0 To 1)
    
    arr(0, 0) = "p_res_atma": arr(0, 1) = 250
    arr(1, 0) = "q_liq_test_sm3day": arr(1, 1) = 30
    arr(2, 0) = "p_wf_test_atma": arr(2, 1) = 75
    arr(3, 0) = "fw_pers": arr(3, 1) = 10
    arr(4, 0) = "pb_atma": arr(4, 1) = 130
    arr(5, 0) = "t_res_C": arr(5, 1) = 80
    arr(6, 0) = "PI": arr(6, 1) = "=IPR_pi_sm3dayatm(R[-4]C, R[-3]C, R[-5]C, R[-2]C, R[-1]C)"
    arr(7, 0) = "IPR": arr(7, 1) = "=encode_ipr(R[-7]C, R[-1]C, R[-3]C, R[-4]C)"
    
    
    ActiveCell.range("A1:B9") = arr
    ActiveCell.range("B7").name = get_name("prod_index")
    ActiveCell.range("B8").name = get_name("IPR")
    ActiveCell.range("B8").Select
    
End Sub
Sub insert_IPR_curve()
    Dim arr(0 To 0, 0 To 1)
 
    Dim s As String
    Dim adress As String
    Dim diag
    
    s = ActiveCell.Formula
    adress = ActiveCell.Address
    
    If Len(s) > 12 And Mid(s, 1, 12) = "=encode_ipr(" Then
            ActiveCell.offset(1, -1).range("A1").Select
                      
            arr(0, 0) = "ipr_curve": arr(0, 1) = "=json_ipr_crv(" & adress & ")"
            'arr(1, 0) = "=decode_json_crv(" & range(adress).Cells(2, 1).Address & ")"
            
            ActiveCell.range("A1:B1") = arr
            ActiveCell.range("A2:B22").Clear
            ActiveCell.range("A2:B22").Select
            Selection.FormulaArray = "=decode_json_crv(" & range(adress).Cells(2, 1).Address & ")"
            
            Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
            diag.Chart.SetSourceData source:=range(ActiveCell.range("A2:B21").Address)
            diag.Chart.HasTitle = True
            diag.Chart.ChartTitle.Text = "IPR"
            diag.Chart.Axes(xlValue, xlPrimary).HasTitle = True
            diag.Chart.Axes(xlValue, xlPrimary).AxisTitle.Text = "Pwf, atma"
            diag.Chart.Axes(xlCategory, xlPrimary).HasTitle = True
            diag.Chart.Axes(xlCategory, xlPrimary).AxisTitle.Text = "Qliq, sm3/day"
    
    Else
        
        'ActiveCell.offset(1, -1).range("A1").Select
        ActiveCell.range("A1") = "select cell with ipr json"
    End If
End Sub
Sub insert_PVT()
'
' insert_PVT Макрос
'
' macros recorded with relative links on
' 28/09/2021  rnt
    Dim arr(0 To 8, 0 To 1)
    arr(0, 0) = "gamma_gas": arr(0, 1) = 0.6
    arr(1, 0) = "gamma_oil": arr(1, 1) = 0.86
    arr(2, 0) = "gamma_wat": arr(2, 1) = 1.1
    arr(3, 0) = "rsb_m3m3": arr(3, 1) = 120
    arr(4, 0) = "pb_atma": arr(4, 1) = 130
    arr(5, 0) = "t_res_C": arr(5, 1) = 80
    arr(6, 0) = "bob_m3m3": arr(6, 1) = 1.2
    arr(7, 0) = "muob_cP": arr(7, 1) = 0.6
    arr(8, 0) = "pvt_corr_set": arr(8, 1) = 0
    
    ActiveCell.range("A1:B9") = arr
    
    ActiveCell.range("A10").Select
    ActiveCell.FormulaR1C1 = "PVT"
    ActiveCell.range("B1").Select
    ActiveCell.FormulaR1C1 = "=encode_PVT(R[-9]C,R[-8]C,R[-7]C,R[-6]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    ActiveCell.name = get_name("PVT")
 
    
End Sub
Sub insert_feed()
'
' insert_PVT Макрос
'
' macros recorded with relative links on
' 28/09/2021  rnt
    Dim arr(0 To 3, 0 To 1)
    arr(0, 0) = "q_liq_sm3day": arr(0, 1) = 30
    arr(1, 0) = "fw_perc": arr(1, 1) = 10
    arr(2, 0) = "rp_m3m3": arr(2, 1) = 120
    arr(3, 0) = "q_gas_free_sm3day": arr(3, 1) = 0
                      
            
            
    Dim s As String
    s = ActiveCell.Formula
    If Len(s) > 12 And Mid(s, 1, 12) = "=encode_PVT(" Then
            ActiveCell.offset(1, -1).range("A1").Select
            ActiveCell.range("A1:B4") = arr
            
            ActiveCell.range("A5").Select
            ActiveCell.FormulaR1C1 = "feed"
            ActiveCell.range("B1").Select
            ActiveCell.FormulaR1C1 = "=encode_feed(R[-4]C,R[-3]C,R[-2]C,R[-1]C,R[-5]C)"
            ActiveCell.name = get_name("feed")
           
    Else
        
        ActiveCell.range("A1:B4") = arr
        
        ActiveCell.range("A5").Select
        ActiveCell.FormulaR1C1 = "fluid"
        ActiveCell.range("B1").Formula2R1C1 = "=encode_pvt()"
        ActiveCell.range("A2").Select
        ActiveCell.FormulaR1C1 = "feed"
        ActiveCell.range("B1").Select
        ActiveCell.FormulaR1C1 = "=encode_feed(R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
        ActiveCell.name = get_name("feed")
        
    End If
    
End Sub
' Units converter from Leonid Igrevsky
Sub btn_units_converter(control As IRibbonControl)
    Call RunThis
End Sub
Private Sub MakeParameter( _
        Dst As range, _
        ParameterName, _
        Dimensions() As Variant, _
        DefaultValue)
        
' Cоздает поле ввода параметра с возможностью выбора единиц измерения и пересчетом в другие единицы измерения
' Dst - ячейка, куда будет помещен вывод, займет 6 ячеек вправо
' ParameterName - название параметра, например "Проницаемость"
' Dimensions() - динамический массив строк с разделителем вертикальной чертой, например "мД|x*1.02e-15|x/1.02e-15|L"
'   массив должен начинаться с нулевого элемента (option base 0), х - латинская буква для формулы перевода
'   размерность | формула для перевода в СИ | формула для перевода из СИ | L или R
'   если в конце указана буква L - это размерность по умолчанию слева, R - справа
'   если две буквы LR - размерности слева и справа по умолчанию будут одинаковые
'   если хотите что-то сломать, задав другой формат, то будьте уверены - сломаете! удачи!
' DefaultValue - значение параметра по умолчанию
    
    Dst.Value = ParameterName
    Dim s() As String ' Для подстрок
    Dim sOutD As String, sOutL As String, sBrackets As String
    Dim M, DefaultDimensionL, DefaultDimensionR
    Dim sOutR As String
        
    sOutD = "" ' Строка размерностей
    sOutL = "" ' Строка формулы перевода
    sBrackets = ""
    For Each M In Dimensions
        s = Split(M, "|") ' Будут созданы строки s(0) s(1) s(2) и возможно s(3)
        s(1) = Replace(s(1), "x", "RC[-2]") ' Букву х нужно заменить на относительную ссылку
        sOutL = sOutL & "IF(" & "RC[-1]=""" & s(0) & """," & s(1) & "," ' Формулы пересчета для внесения в формулу IFS
        sBrackets = sBrackets & ")" ' Запоминаем одну закрывающую скобку
    Next
    sOutL = sOutL & sBrackets ' Закрываем все скобки
    sOutR = "="
    sBrackets = ""
    For Each M In Dimensions
        s = Split(M, "|") ' Будут созданы строки s(0) s(1) s(2) и возможно s(3)
        s(2) = Replace(s(2), "x", sOutL)
        sOutD = sOutD & "," & s(0) ' Названия размерностей
        sOutR = sOutR & "IF(" & "RC[+1]=""" & s(0) & """," & s(2) & "," ' Формулы пересчета для внесения в формулу IFS
        sBrackets = sBrackets & ")" ' Запоминаем одну закрывающую скобку
        If UBound(s) > 2 Then
            If s(3) = "L" Then DefaultDimensionL = s(0) ' Размерность по умолчанию слева
            If s(3) = "R" Then DefaultDimensionR = s(0) ' Размерность по умолчанию справа
            If s(3) = "LR" Then
                DefaultDimensionL = s(0) ' Размерность по умолчанию и там и там
                DefaultDimensionR = s(0)
            End If
        End If
    Next
    sOutR = sOutR & sBrackets ' Закрываем все скобки
    Dst.Cells(1, 3).Value = DefaultValue ' Значение по умолчанию
    Dst.Cells(1, 4).Validation.Delete ' Выпадающий список размерностей
    Dst.Cells(1, 4).Validation.Add Type:=xlValidateList, Formula1:=sOutD
    Dst.Cells(1, 4).Value = DefaultDimensionL ' Размерность по умолчанию
    Dst.Cells(1, 5).Formula = sOutR ' Формула для пересчета в СИ
    Dst.Cells(1, 5).Font.ThemeColor = xlThemeColorDark1
    Dst.Cells(1, 5).Font.TintAndShade = -0.5
    Dst.Cells(1, 6).Validation.Delete ' Выпадающий список размерностей
    Dst.Cells(1, 6).Validation.Add Type:=xlValidateList, Formula1:=sOutD
    Dst.Cells(1, 6).Value = DefaultDimensionR ' Размерность по умолчанию
    
End Sub
Public Sub RunThis()
    
' Действие описано в функции MakeParameter
    
    Dim d() As Variant
    Dim Place
    
    Set Place = ActiveCell
    ' Set Place = [A1] ' В отладочных целях
    
    Place.Resize(8, 6).Select
    If MsgBox("Выделенная область будет изменена." & vbNewLine & "Продолжить?", vbYesNo + vbQuestion, "Units Converter") = vbNo Then
        Place.Select
        Exit Sub
    End If
    Selection.Clear
    
    d = Array( _
        "Па" & ChrW(183) & "с" & "|x|x", _
        "мПа" & ChrW(183) & "с" & "|x/1000|x*1000|R", _
        "сП|x/1000|x*1000|L")
    MakeParameter Place.offset(0, 0), "Вязкость нефти", d, 5
    
    d = Array( _
        "Па|x|x", _
        "МПа|x*1000000|x/1000000", _
        "ат|x*98066.5|x/98066.5", _
        "кгс/см" & ChrW(178) & "|x*98066.5|x/98066.5", _
        "атм|x*101325|x/101325", _
        "psi|x*6894.76|x/6894.76|R", _
        "бар|x*100000|x/100000|L")
    MakeParameter Place.offset(1, 0), "Пластовое давление", d, 200
    d = Array( _
        "м" & ChrW(178) & "|x|x", _
        "Д|x*1.02e-12|x/1.02e-12", _
        "мД|x*1.02e-15|x/1.02e-15|LR")
    MakeParameter Place.offset(2, 0), "Проницаемость", d, 100
    d = Array( _
        ChrW(176) & "К|x|x", _
        ChrW(176) & "С|x+273.15|x-273.15|L", _
        ChrW(176) & "F|(x-32)*5/9+273.15|(x-273.15)*9/5+32|R")
    MakeParameter Place.offset(3, 0), "Температура", d, 100
    d = Array( _
        "м" & ChrW(179) & "/м" & ChrW(179) & "|x|x|L", _
        "scft/bbl|x*0.02832/0.158987|x/0.02832*0.158987", _
        "ft" & ChrW(179) & "/bbl|x*0.02832/0.158987|x/0.02832*0.158987|R")
    MakeParameter Place.offset(4, 0), "Газосодержание", d, 50
    d = Array( _
        "м|x|x", _
        "мм|x/1000|x*1000|L", _
        "см|x/100|x*100", _
        "in|x*0.0254|x/0.0254|R", _
        "ft|x*0.3048|x/0.3048")
    MakeParameter Place.offset(5, 0), "Радиус скважины", d, 73
    d = Array( _
        "м" & ChrW(179) & "/с|x|x", _
        "м" & ChrW(179) & "/сут|x/86400|x*86400|L", _
        "л/мин|x/60000|x*60000", _
        "л/сек|x/1000|x*1000", _
        "bpd|x*0.158987/86400|x/0.158987*86400|R", _
        "ft" & ChrW(179) & "/сут|x*0.02832/86400|x/0.02832*86400")
    MakeParameter Place.offset(6, 0), "Дебит скважины", d, 100
    d = Array( _
        "кг/м" & ChrW(179) & "|x|x|L", _
        "г/cм" & ChrW(179) & "|x*1000|x/1000", _
        "lb/gal|x*119.8|x/119.8", _
        "lb/in" & ChrW(179) & "|x*27679.9|x/27679.9", _
        "lb/ft" & ChrW(179) & "|x*16.01846|x/16.01846", _
        ChrW(176) & "API|141.5*1000/(131.5+x)|141.5*1000/x-131.5|R")
    MakeParameter Place.offset(7, 0), "Плотность нефти", d, 850
End Sub

