'=======================================================================================
'Unifloc 7.36 winter jet                                     khabibullinra@gmail.com
'Petroleum engineering calculations modules (macroses)
'2000 - 2022
'
'=======================================================================================
' функции для работы кнопок на панеле Excel (ribbon)
Option Base 0
Option Explicit 'Потребовать явного объявления всех переменных в файле
'btn1 (компонент: button, атрибут: onAction), 2007
Sub btn_ribbon_version(control As IRibbonControl)
    'MsgBox "Сработала функция onAction элемента " + control.ID
    Application.StatusBar = "Сработала функция onAction элемента " + control.ID
    Call InfoForm.Show
    Application.StatusBar = ""
End Sub
'btn2 (компонент: button, атрибут: onAction), 2007
Sub btn_ribbon_links(control As IRibbonControl)
    Dim num As Integer
    add_log_msg "Сработала функция onAction элемента " + control.ID
    num = correct_links
    add_log_msg "Выполнено замен " & CStr(num)
End Sub
'btn3 (компонент: button, атрибут: onAction), 2007
Sub btn_ribbon_pvt(control As IRibbonControl)
    Dim num As Integer
    Call insert_PVT
End Sub
Sub btn_ribbon_feed(control As IRibbonControl)
    Dim num As Integer
    Call insert_feed
End Sub
' решение для исправление проблемы с путями к надстройке
' https://www.planetaexcel.ru/forum/index.php?PAGE_NAME=message&FID=8&TID=10450&TITLE_SEO=10450&MID=91949#message91949
' вызывается по нажатию кнопки на риббоне
Public Function correct_links()
 Dim wb As Workbook
 Dim MyAddIn, Lnk, sh
 Dim MyAddInNameFull
 Dim aLinks
 Dim i As Integer
 i = 0
 
 On Error GoTo exit_
 
 ' определим имя надстройки
 MyAddIn = UCase(ThisWorkbook.name)
 MyAddInNameFull = ThisWorkbook.Path & "\" & ThisWorkbook.name
 Set wb = ActiveWorkbook  ' работаем с активной книгой
 With wb
   aLinks = wb.LinkSources()
   If Not IsEmpty(aLinks) Then
        For Each Lnk In .LinkSources(Type:=xlExcelLinks)
            Debug.Print Lnk
             Debug.Print UCase(Lnk), "*" & MyAddIn
          If UCase(Lnk) Like "*" & MyAddIn Then
            add_log_msg "в книге " & wb.name & " обнаружена ссылка на надстройку " & Lnk
            If UCase(Lnk) <> UCase(MyAddInNameFull) Then
                add_log_msg "в книге " & wb.name & " пытаемся исправить ссылку " & Lnk & " на корректную " & MyAddInNameFull
                .ChangeLink name:=Lnk, NewName:=MyAddIn
                i = i + 1
                For Each sh In .Worksheets
                  sh.Calculate
                Next
            Else
                add_log_msg "в книге " & wb.name & " ссылка " & Lnk & " корректная, исправления не нужны"
            End If
            'Exit For
          End If
        Next
    End If
 End With
 correct_links = i
 Exit Function
exit_:
 add_log_msg "Ошибка. В книге " & wb.name & " при исправлении ссылок на надстройку произошел сбой. что то пошло не так"
End Function
Sub insert_PVT()
'
' insert_PVT Макрос
'
' macros recorded with relative links on
' 28/09/2021  rnt
    Dim arr(0 To 8, 0 To 1)
    arr(0, 0) = "gamma_gas": arr(0, 1) = 0.6
    arr(1, 0) = "gamma_oil": arr(1, 1) = 0.86
    arr(2, 0) = "gamma_wat": arr(2, 1) = 1.1
    arr(3, 0) = "rsb_m3m3": arr(3, 1) = 120
    arr(4, 0) = "pb_atma": arr(4, 1) = 130
    arr(5, 0) = "t_res_C": arr(5, 1) = 80
    arr(6, 0) = "bob_m3m3": arr(6, 1) = 1.2
    arr(7, 0) = "muob_cP": arr(7, 1) = 0.6
    arr(8, 0) = "pvt_corr_set": arr(8, 1) = 0
    
    ActiveCell.range("A1:B9") = arr
    
    ActiveCell.range("A10").Select
    ActiveCell.FormulaR1C1 = "PVT"
    ActiveCell.range("B1").Select
    ActiveCell.FormulaR1C1 = "=encode_PVT(R[-9]C,R[-8]C,R[-7]C,R[-6]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
 
    
End Sub
Sub insert_feed()
'
' insert_PVT Макрос
'
' macros recorded with relative links on
' 28/09/2021  rnt
            Dim arr(0 To 3, 0 To 1)
            arr(0, 0) = "q_liq_sm3day": arr(0, 1) = 30
            arr(1, 0) = "fw_perc": arr(1, 1) = 10
            arr(2, 0) = "rp_m3m3": arr(2, 1) = 120
            arr(3, 0) = "q_gas_free_sm3day": arr(3, 1) = 0
                      
            
            
    Dim s As String
    s = ActiveCell.Formula
    If Len(s) > 12 And Mid(s, 1, 12) = "=encode_PVT(" Then
            ActiveCell.offset(1, -1).range("A1").Select
            ActiveCell.range("A1:B4") = arr
            
            ActiveCell.range("A5").Select
            ActiveCell.FormulaR1C1 = "feed"
            ActiveCell.range("B1").Select
            ActiveCell.FormulaR1C1 = "=encode_feed(R[-4]C,R[-3]C,R[-2]C,R[-1]C,R[-5]C)"
           
    Else
        
        ActiveCell.range("A1:B4") = arr
        
        ActiveCell.range("A5").Select
        ActiveCell.FormulaR1C1 = "fluid"
        ActiveCell.range("B1").Formula2R1C1 = "=encode_pvt()"
        ActiveCell.range("A2").Select
        ActiveCell.FormulaR1C1 = "feed"
        ActiveCell.range("B1").Select
        ActiveCell.FormulaR1C1 = "=encode_feed(R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
        
    End If
    
End Sub
' Units converter from Leonid Igrevsky
'btn5 (компонент: button, атрибут: onAction), 2021
Sub btn_units_converter(control As IRibbonControl)
    Call RunThis
End Sub
Private Sub MakeParameter( _
        Dst As range, _
        ParameterName, _
        Dimensions() As Variant, _
        DefaultValue)
        
' Cоздает поле ввода параметра с возможностью выбора единиц измерения и пересчетом в другие единицы измерения
' Dst - ячейка, куда будет помещен вывод, займет 6 ячеек вправо
' ParameterName - название параметра, например "Проницаемость"
' Dimensions() - динамический массив строк с разделителем вертикальной чертой, например "мД|x*1.02e-15|x/1.02e-15|L"
'   массив должен начинаться с нулевого элемента (option base 0), х - латинская буква для формулы перевода
'   размерность | формула для перевода в СИ | формула для перевода из СИ | L или R
'   если в конце указана буква L - это размерность по умолчанию слева, R - справа
'   если две буквы LR - размерности слева и справа по умолчанию будут одинаковые
'   если хотите что-то сломать, задав другой формат, то будьте уверены - сломаете! удачи!
' DefaultValue - значение параметра по умолчанию
    
    Dst.Value = ParameterName
    Dim s() As String ' Для подстрок
    Dim sOutD As String, sOutL As String, sBrackets As String
    Dim M, DefaultDimensionL, DefaultDimensionR
    Dim sOutR As String
        
    sOutD = "" ' Строка размерностей
    sOutL = "" ' Строка формулы перевода
    sBrackets = ""
    For Each M In Dimensions
        s = Split(M, "|") ' Будут созданы строки s(0) s(1) s(2) и возможно s(3)
        s(1) = Replace(s(1), "x", "RC[-2]") ' Букву х нужно заменить на относительную ссылку
        sOutL = sOutL & "IF(" & "RC[-1]=""" & s(0) & """," & s(1) & "," ' Формулы пересчета для внесения в формулу IFS
        sBrackets = sBrackets & ")" ' Запоминаем одну закрывающую скобку
    Next
    sOutL = sOutL & sBrackets ' Закрываем все скобки
    sOutR = "="
    sBrackets = ""
    For Each M In Dimensions
        s = Split(M, "|") ' Будут созданы строки s(0) s(1) s(2) и возможно s(3)
        s(2) = Replace(s(2), "x", sOutL)
        sOutD = sOutD & "," & s(0) ' Названия размерностей
        sOutR = sOutR & "IF(" & "RC[+1]=""" & s(0) & """," & s(2) & "," ' Формулы пересчета для внесения в формулу IFS
        sBrackets = sBrackets & ")" ' Запоминаем одну закрывающую скобку
        If UBound(s) > 2 Then
            If s(3) = "L" Then DefaultDimensionL = s(0) ' Размерность по умолчанию слева
            If s(3) = "R" Then DefaultDimensionR = s(0) ' Размерность по умолчанию справа
            If s(3) = "LR" Then
                DefaultDimensionL = s(0) ' Размерность по умолчанию и там и там
                DefaultDimensionR = s(0)
            End If
        End If
    Next
    sOutR = sOutR & sBrackets ' Закрываем все скобки
    Dst.Cells(1, 3).Value = DefaultValue ' Значение по умолчанию
    Dst.Cells(1, 4).Validation.Delete ' Выпадающий список размерностей
    Dst.Cells(1, 4).Validation.Add Type:=xlValidateList, Formula1:=sOutD
    Dst.Cells(1, 4).Value = DefaultDimensionL ' Размерность по умолчанию
    Dst.Cells(1, 5).Formula = sOutR ' Формула для пересчета в СИ
    Dst.Cells(1, 5).Font.ThemeColor = xlThemeColorDark1
    Dst.Cells(1, 5).Font.TintAndShade = -0.5
    Dst.Cells(1, 6).Validation.Delete ' Выпадающий список размерностей
    Dst.Cells(1, 6).Validation.Add Type:=xlValidateList, Formula1:=sOutD
    Dst.Cells(1, 6).Value = DefaultDimensionR ' Размерность по умолчанию
    
End Sub
Public Sub RunThis()
    
' Действие описано в функции MakeParameter
    
    Dim d() As Variant
    Dim Place
    
    Set Place = ActiveCell
    ' Set Place = [A1] ' В отладочных целях
    
    Place.Resize(8, 6).Select
    If MsgBox("Выделенная область будет изменена." & vbNewLine & "Продолжить?", vbYesNo + vbQuestion, "Units Converter") = vbNo Then
        Place.Select
        Exit Sub
    End If
    Selection.Clear
    
    d = Array( _
        "Па" & ChrW(183) & "с" & "|x|x", _
        "мПа" & ChrW(183) & "с" & "|x/1000|x*1000|R", _
        "сП|x/1000|x*1000|L")
    MakeParameter Place.offset(0, 0), "Вязкость нефти", d, 5
    
    d = Array( _
        "Па|x|x", _
        "МПа|x*1000000|x/1000000", _
        "ат|x*98066.5|x/98066.5", _
        "кгс/см" & ChrW(178) & "|x*98066.5|x/98066.5", _
        "атм|x*101325|x/101325", _
        "psi|x*6894.76|x/6894.76|R", _
        "бар|x*100000|x/100000|L")
    MakeParameter Place.offset(1, 0), "Пластовое давление", d, 200
    d = Array( _
        "м" & ChrW(178) & "|x|x", _
        "Д|x*1.02e-12|x/1.02e-12", _
        "мД|x*1.02e-15|x/1.02e-15|LR")
    MakeParameter Place.offset(2, 0), "Проницаемость", d, 100
    d = Array( _
        ChrW(176) & "К|x|x", _
        ChrW(176) & "С|x+273.15|x-273.15|L", _
        ChrW(176) & "F|(x-32)*5/9+273.15|(x-273.15)*9/5+32|R")
    MakeParameter Place.offset(3, 0), "Температура", d, 100
    d = Array( _
        "м" & ChrW(179) & "/м" & ChrW(179) & "|x|x|L", _
        "scft/bbl|x*0.02832/0.158987|x/0.02832*0.158987", _
        "ft" & ChrW(179) & "/bbl|x*0.02832/0.158987|x/0.02832*0.158987|R")
    MakeParameter Place.offset(4, 0), "Газосодержание", d, 50
    d = Array( _
        "м|x|x", _
        "мм|x/1000|x*1000|L", _
        "см|x/100|x*100", _
        "in|x*0.0254|x/0.0254|R", _
        "ft|x*0.3048|x/0.3048")
    MakeParameter Place.offset(5, 0), "Радиус скважины", d, 73
    d = Array( _
        "м" & ChrW(179) & "/с|x|x", _
        "м" & ChrW(179) & "/сут|x/86400|x*86400|L", _
        "л/мин|x/60000|x*60000", _
        "л/сек|x/1000|x*1000", _
        "bpd|x*0.158987/86400|x/0.158987*86400|R", _
        "ft" & ChrW(179) & "/сут|x*0.02832/86400|x/0.02832*86400")
    MakeParameter Place.offset(6, 0), "Дебит скважины", d, 100
    d = Array( _
        "кг/м" & ChrW(179) & "|x|x|L", _
        "г/cм" & ChrW(179) & "|x*1000|x/1000", _
        "lb/gal|x*119.8|x/119.8", _
        "lb/in" & ChrW(179) & "|x*27679.9|x/27679.9", _
        "lb/ft" & ChrW(179) & "|x*16.01846|x/16.01846", _
        ChrW(176) & "API|141.5*1000/(131.5+x)|141.5*1000/x-131.5|R")
    MakeParameter Place.offset(7, 0), "Плотность нефти", d, 850
End Sub

