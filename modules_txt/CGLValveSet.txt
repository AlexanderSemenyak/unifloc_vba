''=======================================================================================
''Unifloc 7.31 Beloretsk                                          khabibullinra@gmail.com
''Petroleum engineering calculations modules (macroses)
''2000 - 2021
''
''=======================================================================================
''
'' Gaslift valve set
''
'' will provide initialisation methods
'Option Explicit
'
'Public valves As New Collection
'Public q_gas_inj_sm3day As Double
'Public p_gas_inj_atma As Double
'Public d_gas_inj_mm As Double
'Public critical_flow_surf As Boolean
'
'
'Private fluid_ As CPVT
'Private class_name_ As String
'
'
'
'Public Property Get Count() As Integer
'' return number of actual valves in well
'    Count = valves.Count
'End Property
'
'Public Property Get h_mes_m(i As Integer) As Double
'    On Error GoTo er1:
'    Dim vlv As CGLvalve
'    Set vlv = valves(i)
'    h_mes_m = vlv.h_mes_m
'    Exit Property
'er1:
'' унифицированная реакция на ошибочный ввод ключевых параметров класса
'    Dim msg As String, fname As String
'    fname = "h_mes_m"
'    msg = class_name_ & "." & fname & ": error access valve " & fname & " = " & CStr(i)
'    add_log_msg msg
'    Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
'End Property
'
'Public Property Get Hmes_lowest_m() As Double
'    On Error GoTo er1:
'    Dim i As Integer
'    i = Count
'    If i > 0 Then
'        Hmes_lowest_m = valves(i).h_mes_m
'    Else
'        Hmes_lowest_m = 0
'    End If
'    Exit Property
'er1:
'' унифицированная реакция на ошибочный ввод ключевых параметров класса
'    Dim msg As String, fname As String
'    fname = "Hmes_lowest_m"
'    msg = class_name_ & "." & fname & ": error access valve " & fname & " = " & CStr(i)
'    add_log_msg msg
'    Err.Raise kErrPVTinput, class_name_ & "." & fname, msg
'End Property
'
'Public Property Set fluid(val As CPVT)
'    Dim vlv As CGLvalve
'    For Each vlv In valves
'        Set vlv.fluid = val
'    Next vlv
'    Set fluid_ = val
'End Property
'
'Public Property Get fluid() As CPVT
'    Set fluid = fluid_
'End Property
'
'
'Public Sub InitOneValve(h_mes_m, dvalve_mm)
'
'    Dim vlv As New CGLvalve
'    vlv.h_mes_m = h_mes_m
'    vlv.d_port_mm = dvalve_mm
'    valves.RemoveAll
'    valves.Add vlv
'
'End Sub
'
'
'Public Sub loadFromVertRange(RangX As range, RangY As range)
'' load GLVs from vertical range.
'' range читаются по вертикали - значения должны быть в строках - столбец должен быть только один
'' должна использоваться для чтения исходных данных с листа
''
'    Dim i As Integer
'    Dim NumVal As Integer
'    Dim Hm_m As Double, dvlv_mm As Double
'    Dim vlv As CGLvalve
'    Dim crv_vlv As New CInterpolation  ' for sorting
'
'
'    NumVal = MinReal(RangX.Rows.Count, RangY.Rows.Count)
'    If NumVal < 0 Then Err.Raise 1, , "Не удалось прочитать кривую"
'    ' read ranges into CInterpolation object - it will sort and delete duplicates
'    crv_vlv.loadFromVertRange RangX, RangY
'    On Error Resume Next
'    For i = 1 To crv_vlv.num_points
'        Hm_m = crv_vlv.pointX(i)
'        dvlv_mm = crv_vlv.PointY(i)
'        If (i = 1) Or (Hm_m > 0) Then
'            Set vlv = New CGLvalve
'            vlv.h_mes_m = Hm_m
'            vlv.d_port_mm = dvlv_mm
'            valves.Add vlv
'        End If
'    Next i
'    'valves.fluid = fluid
'End Sub
'
'Public Sub loadFromArray(harr, darr, parr)
'    Dim i As Integer
'    Dim NumVal As Integer
'    Dim Hm_m As Double, dvlv_mm As Double
'    Dim vlv As CGLvalve
'    Dim crv_vlv As New CInterpolation  ' for sorting
'
'    For i = LBound(harr) To UBound(harr)
'        Hm_m = harr(i)
'        If Hm_m > 0 Then
'            Set vlv = New CGLvalve
'            vlv.h_mes_m = Hm_m
'            vlv.d_port_mm = darr(i)
'            valves.Add vlv
'        End If
'    Next i
'    'valves.fluid = fluid
'End Sub
'
'Private Sub Class_Initialize()
'    class_name_ = "CGLValveSet"
'    critical_flow_surf = False
'End Sub

