'=======================================================================================
'Unifloc 7.28 primavera                                     khabibullinra@gmail.com
'Petroleum engineering calculations modules (macroses)
'2000 - 2021
'
'=======================================================================================
'PVT UDF  (user defined functions for PVT calculation)
Option Explicit
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета всех PVT свойств нефти при заданных
' давлении и температуре
Public Function PVT_calc( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String, _
            Optional ByVal param As String = "")
' p_atma   - давление, атм
' t_C      - температура, С.
' PVT_prop - статичные свойства флюида - плотности rsb и пр
'            используйте encode_PVT для генерации
' param    - набор параметров расчета в виде json строки
'
' Возвращает значения всех PVT свойств
' для заданных термобарических условий.
'description_end
    Const nv = 1
On Error GoTo err1:
    Dim res(0 To 1, 0 To nv) As String ' must be string array for correct output in 2016 office for long str (>256)
    Dim resd As New Dictionary
    
    ' param dictionary and settings variables with default values
    Dim prmd As Dictionary
    Dim show_log As Boolean
    Dim show_array As Boolean
    
    show_log = True
    
    ' auxiliary variables
    Dim i As Integer
    
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    
On Error GoTo err2:
    Set prmd = param_to_dict(param)
    show_log = prmd(prm_show_log)
    show_array = prmd(prm_show_array)
    
' param read done start calc
On Error GoTo err1:
    
    Call fluid.calc_PVT(p_atma, t_C)
    
On Error Resume Next
    With fluid
        resd.Add "rs_m3m3", .rs_m3m3
        resd.Add "pb_atma", .pb_calc_atma
        resd.Add "bo_m3m3", .bo_m3m3
        resd.Add "bg_m3m3", .bg_m3m3
        resd.Add "bw_m3m3", .bw_m3m3
        resd.Add "mu_oil_cP", .mu_oil_cP
        resd.Add "mu_gas_cP", .mu_gas_cP
        resd.Add "mu_wat_cP", .mu_wat_cP
        resd.Add "rho_oil_rc_kgm3", .rho_oil_rc_kgm3
        resd.Add "rho_gas_rc_kgm3", .rho_gas_rc_kgm3
        resd.Add "rho_wat_rc_kgm3", .rho_wat_rc_kgm3
        resd.Add "compressibility_oil_1atm", .compressibility_oil_1atm
        resd.Add "compressibility_gas_1atm", .compressibility_gas_1atm
        resd.Add "compressibility_wat_1atm", .compressibility_wat_1atm
        resd.Add "sigma_liq_Nm", .sigma_liq_Nm
        resd.Add "sigma_oil_gas_Nm", .sigma_oil_gas_Nm
        resd.Add "sigma_wat_gas_Nm", .sigma_wat_gas_Nm
        resd.Add "cp_oil_JkgC", .cp_oil_JkgC
        resd.Add "cp_gas_JkgC", .cp_gas_JkgC
        resd.Add "cv_gas_JkgC", .cv_gas_JkgC
        resd.Add "cp_wat_JkgC", .cp_wat_JkgC
        resd.Add "z", .z
        resd.Add "sal_ppm", .sal_ppm
    End With
    res(0, 0) = ConvertToJson(resd): res(1, 0) = "json"
    
err1done:
    
    res(0, 1) = fluid.log_.get_str_safe(show_log)
    res(1, 1) = "log"
    If show_array Then
        PVT_calc = res
    Else
        PVT_calc = res(0, 0)
    End If
    Exit Function
    
err1:
    For i = 0 To nv
        res(0, i) = -1
    Next i
    Call fluid.add_log_msg("error: " & Err.Description)
    Resume err1done:
err2:
    Call fluid.add_log_msg("warning: some error while param read detected " & Err.Description)
    Resume Next:
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета объемного коэффициента газа
Public Function PVT_bg_m3m3( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' Возвращает значение объемного коэффициента газа, м3/м3
' для заданных термобарических условий.
' В основе расчета корреляция для z факотора
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_bg_m3m3 = fluid.bg_m3m3
    
    Exit Function
er1:
    PVT_bg_m3m3 = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет объемного коэффициента нефти
Public Function PVT_bo_m3m3( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' Возвращает значение объемного коэффициента нефти, м3/м3
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_bo_m3m3 = fluid.bo_m3m3
    
    Exit Function
er1:
    PVT_bo_m3m3 = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет объемного коэффициента воды
Public Function PVT_bw_m3m3( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' Возвращает значение объемного коэффициента воды, м3/м3
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_bw_m3m3 = fluid.bw_m3m3
    
    Exit Function
er1:
    PVT_bw_m3m3 = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет солености воды
Public Function PVT_salinity_ppm( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' Возвращает значение солености воды, ppm
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_salinity_ppm = fluid.sal_ppm
    
    Exit Function
er1:
    PVT_salinity_ppm = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет вязкости нефти
Public Function PVT_mu_oil_cP( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' Возвращает значение вязкости нефти, сП
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_mu_oil_cP = fluid.mu_oil_cP
    
    Exit Function
er1:
    PVT_mu_oil_cP = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет вязкости газа
Public Function PVT_mu_gas_cP( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' Возвращает значение вязкости газа, сП
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_mu_gas_cP = fluid.mu_gas_cP
    
    Exit Function
er1:
    PVT_mu_gas_cP = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет вязкости воды
Public Function PVT_mu_wat_cP( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' Возвращает значение вязкости воды, сП
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_mu_wat_cP = fluid.mu_wat_cP
    
    Exit Function
er1:
    PVT_mu_wat_cP = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет газосодержания
Public Function PVT_rs_m3m3( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' Возвращает значение газосодержания, м3/м3
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_rs_m3m3 = fluid.rs_m3m3
    
    Exit Function
er1:
    PVT_rs_m3m3 = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет коэффициента сверхсжимаемости газа
Public Function PVT_z( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' Результат - z фактор газа.
'           коэффициент сверхсжимаемости газа,
'           безразмерная величина
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_z = fluid.z
    
    Exit Function
er1:
    PVT_z = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет плотности нефти в рабочих условиях
Public Function PVT_rho_oil_kgm3( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' результат - плотность нефти
'           при заданных термобарических условиях, кг/м3.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_rho_oil_kgm3 = fluid.rho_oil_rc_kgm3
    
    Exit Function
er1:
    PVT_rho_oil_kgm3 = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет плотности газа в рабочих условиях
Public Function PVT_rho_gas_kgm3( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' результат - число - плотность газа
'           при заданных термобарических условиях, кг/м3.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_rho_gas_kgm3 = fluid.rho_gas_rc_kgm3
    
    Exit Function
er1:
    PVT_rho_gas_kgm3 = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет плотности воды в рабочих условиях
Public Function PVT_rho_wat_kgm3( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' результат - число - плотность воды
'           при заданных термобарических условиях, кг/м3.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_rho_wat_kgm3 = fluid.rho_wat_rc_kgm3
    
    Exit Function
er1:
    PVT_rho_wat_kgm3 = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' Расчет давления насыщения
Public Function PVT_pb_atma( _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' результат - число - давление насыщения.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(1, t_C)
    PVT_pb_atma = fluid.pb_calc_atma
    
    Exit Function
er1:
    PVT_pb_atma = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет коэффициента поверхностного натяжения нефть - газ
Public Function PVT_ST_oilgas_Nm( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' результат - число
' Возвращает коэффициента поверхностного натяжения нефть - газ, Нм
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_ST_oilgas_Nm = fluid.sigma_oil_gas_Nm
    
    Exit Function
er1:
    PVT_ST_oilgas_Nm = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет коэффициента поверхностного натяжения вода - газ
Public Function PVT_ST_watgas_Nm( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' результат - число
' Возвращает коэффициента поверхностного натяжения вода - газ, Нм
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_ST_watgas_Nm = fluid.sigma_wat_gas_Nm
    
    Exit Function
er1:
    PVT_ST_watgas_Nm = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет коэффициента поверхностного натяжения жидкость - газ
Public Function PVT_ST_liqgas_Nm( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' результат - число
' Возвращает коэффициента поверхностного натяжения жидкость - газ, Нм
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_ST_liqgas_Nm = fluid.sigma_liq_Nm
    
    Exit Function
er1:
    PVT_ST_liqgas_Nm = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет теплоемкости нефти при постоянном давлении cp
Public Function PVT_cp_oil_JkgC( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' результат - число
' Возвращает коэффициента поверхностного натяжения жидкость - газ, Нм
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_cp_oil_JkgC = fluid.cp_oil_JkgC
    
    Exit Function
er1:
    PVT_cp_oil_JkgC = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет теплоемкости газа при постоянном давлении cp
Public Function PVT_cp_gas_JkgC( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' результат - число
' Возвращает коэффициента поверхностного натяжения жидкость - газ, Нм
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_cp_gas_JkgC = fluid.cp_gas_JkgC
    
    Exit Function
er1:
    PVT_cp_gas_JkgC = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет теплоемкости газа при постоянном давлении cp
Public Function PVT_cv_gas_JkgC( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
'
' результат - число
' Возвращает коэффициента поверхностного натяжения жидкость - газ, Нм
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_cv_gas_JkgC = fluid.cv_gas_JkgC
    
    Exit Function
er1:
    PVT_cv_gas_JkgC = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет теплоемкости воды при постоянном давлении cp
Public Function PVT_cp_wat_JkgC( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma   - давление, атм
' t_C      - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
' результат - число
' Возвращает коэффициента поверхностного натяжения жидкость - газ, Нм
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_cp_wat_JkgC = fluid.cp_wat_JkgC
    
    Exit Function
er1:
    PVT_cp_wat_JkgC = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет сжимаемости воды
Public Function PVT_compressibility_wat_1atm( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
' результат - число
' Возвращает коэффициента поверхностного натяжения жидкость - газ, Нм
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_compressibility_wat_1atm = fluid.compressibility_wat_1atm
    
    Exit Function
er1:
    PVT_compressibility_wat_1atm = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет сжимаемости нефти
Public Function PVT_compressibility_oil_1atm( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
' результат - число
' Возвращает коэффициента поверхностного натяжения жидкость - газ, Нм
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_compressibility_oil_1atm = fluid.compressibility_oil_1atm
    
    Exit Function
er1:
    PVT_compressibility_oil_1atm = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет сжимаемости нефти
Public Function PVT_compressibility_gas_1atm( _
            ByVal p_atma As Double, _
            ByVal t_C As Double, _
            ByVal PVT_prop As String)
' p_atma  - давление, атм
' t_C     - температура, С.
' PVT_prop - строка с параметрами флюида,
'           используйте encode_pvt для ее генерации
' результат - число
' Возвращает коэффициента поверхностного натяжения жидкость - газ, Нм
' для заданных термобарических условий.
'description_end
On Error GoTo er1:
    Dim fluid As New CPVT
    Call fluid.init_feed(PVT_prop)
    Call fluid.calc_PVT(p_atma, t_C)
    PVT_compressibility_gas_1atm = fluid.compressibility_gas_1atm
    
    Exit Function
er1:
    PVT_compressibility_gas_1atm = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета параметров потока
Public Function feed_calc( _
               ByVal p_atma As Double, _
               ByVal t_C As Double, _
               ByVal feed As String, _
      Optional ByVal param As String = "")
' p_atma     - давление, атм
' t_C        - температура, С.
' feed - параметры потока флюидов, дебит, обводненность и пр
'              используйте encode_feed для генерации
' param      - параметры расчета и вывода результатов
' результат  - массив всех расчетных значений,
'              с подписями во второй строке
'description_end
    Const nv = 1
On Error GoTo err1:
    Dim fluid_stream As New CPVT
    Dim res(0 To 1, 0 To nv) As Variant
    Dim resd As New Dictionary
    Dim prmd As Dictionary
    Dim show_log As Boolean
    Dim show_array As Boolean
    Dim i As Integer
    
    show_log = True
    With fluid_stream
        Call .init_feed(feed)
        On Error GoTo err2:
            Set prmd = param_to_dict(param)
            show_log = prmd(prm_show_log)
            show_array = prmd(prm_show_array)
        
        ' param read done start calc
        On Error GoTo err1:
            Call .calc_PVT(p_atma, t_C)
        On Error Resume Next
        
            ' prepare output
            resd.Add "q_mix_rc_m3day", .q_mix_rc_m3day
            resd.Add "q_oil_rc_m3day", .q_oil_rc_m3day
            resd.Add "q_wat_rc_m3day", .q_wat_rc_m3day
            resd.Add "q_gas_rc_m3day", .q_gas_rc_m3day
            resd.Add "gas_fraction_d", .gas_fraction_d
            resd.Add "rho_mix_rc_kgm3", .rho_mix_rc_kgm3
            resd.Add "mu_mix_cP", .mu_mix_cP
            resd.Add "mo_kgsec", .mo_kgsec
            resd.Add "mw_kgsec", .mw_kgsec
            resd.Add "mg_kgsec", .mg_kgsec
            resd.Add "mg_kgmol", .mg_kgmol
            resd.Add "cmix_JkgC", .cmix_JkgC
            resd.Add "cJT_Katm", .cJT_Katm
            
                        
            res(0, 0) = ConvertToJson(resd): res(1, 0) = "json"
err1done:
            res(0, 1) = .log_.get_str_safe(show_log)
            res(1, 1) = "log"
            If show_array Then
                feed_calc = res
            Else
                feed_calc = res(0, 0)
            End If
            Exit Function
err1:
            For i = 0 To nv
                res(0, i) = -1
            Next i
            Call fluid_stream.add_log_msg("error: " & Err.Description)
            Resume err1done:
err2:
            Call fluid_stream.add_log_msg("warning: some error while param read detected " & Err.Description)
            Resume Next:
        End With
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета коэффициента Джоуля Томсона
Public Function feed_gas_fraction_d( _
               ByVal p_atma As Double, _
               ByVal t_C As Double, _
               ByVal feed As String, _
      Optional ByVal ksep_add_fr As Double = 0)
' p_atma     - давление, атм
' t_C        - температура, С.
' feed - параметры потока флюидов, дебит, обводненность и пр
'              используйте encode_feed для генерации
' ksep_add_fr - коэффициент сепарации газа из потока
' результат  - значение доли газа в потоке (расходна доля)
'description_end
 On Error GoTo er1:
    Dim PVT As New CPVT
    Call PVT.init_feed(feed)
    Call PVT.calc_PVT(p_atma, t_C)
    feed_gas_fraction_d = PVT.gas_fraction_d(ksep_add_fr)
    Exit Function
er1:
    feed_gas_fraction_d = "error"
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет давления при котором
' достигается заданная доля газа в потоке
Public Function feed_p_gas_fraction_atma( _
               ByVal free_gas_d As Double, _
               ByVal t_C As Double, _
               ByVal feed As String, _
      Optional ByVal ksep_add_fr As Double = 0)
' free_gas_d - допустимая доля газа в потоке;
' t_C        - температура, С.
' feed - параметры потока флюидов, дебит, обводненность и пр
'              используйте encode_feed для генерации
' ksep_add_fr - коэффициент сепарации газа из потока
' результат  - число - давление
'description_end
On Error GoTo er1:
    Dim PVT As New CPVT
    Call PVT.init_feed(feed)
    feed_p_gas_fraction_atma = PVT.p_gas_fraction_atma(free_gas_d, t_C, ksep_add_fr)
    Exit Function
er1:
    feed_p_gas_fraction_atma = "error"
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' расчет газового фактора
' при котором достигается заданная доля газа в потоке
Public Function feed_rp_gas_fraction_m3m3( _
               ByVal free_gas_d As Double, _
               ByVal p_atma As Double, _
               ByVal t_C As Double, _
               ByVal feed As String, _
      Optional ByVal ksep_add_fr As Double = 0)
' free_gas_d - допустимая доля газа в потоке;
' t_C        - температура, С.
' feed - параметры потока флюидов, дебит, обводненность и пр
'              используйте encode_feed для генерации
' ksep_add_fr - коэффициент сепарации газа из потока
' результат  - число - давление,
'              подпись, и лог расчета если подключен
'description_end
      
On Error GoTo er1:
    Dim PVT As New CPVT
    
    Call PVT.init_feed(feed)
    feed_rp_gas_fraction_m3m3 = PVT.rp_gas_fraction_m3m3(free_gas_d, p_atma, t_C, ksep_add_fr)
    
    Exit Function
er1:
    feed_rp_gas_fraction_m3m3 = "error"
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета коэффициента Джоуля Томсона
Public Function feed_cJT_Katm( _
               ByVal p_atma As Double, _
               ByVal t_C As Double, _
               ByVal feed As String)
' p_atma     - давление, атм
' t_C        - температура, С.
' feed - параметры потока флюидов, дебит, обводненность и пр
'              используйте encode_feed для генерации
' результат  - массив, значение коэффициента Джоуля Томсона потока,
'              подпись, и лог расчета если подключен
'description_end
 On Error GoTo er1:
    Dim PVT As New CPVT
    Call PVT.init_feed(feed)
    Call PVT.calc_PVT(p_atma, t_C)
    feed_cJT_Katm = PVT.cJT_Katm
    Exit Function
er1:
    feed_cJT_Katm = "error"
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета расхода газо жидкостной смеси (ГЖС)
Public Function feed_q_mix_rc_m3day( _
               ByVal p_atma As Double, _
               ByVal t_C As Double, _
               ByVal feed As String)
' p_atma     - давление, атм
' t_C        - температура, С.
' feed - параметры потока флюидов, дебит, обводненность и пр
'              используйте encode_feed для генерации
' результат  - массив, расход ГЖС в рабочих условиях,
'              подпись, и лог расчета если подключен
'description_end
 On Error GoTo er1:
    Dim PVT As New CPVT
    Call PVT.init_feed(feed)
    Call PVT.calc_PVT(p_atma, t_C)
    feed_q_mix_rc_m3day = PVT.q_mix_rc_m3day
    Exit Function
er1:
    feed_q_mix_rc_m3day = "error"
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета плотности газо жидкостной смеси (ГЖС)
Public Function feed_rho_mix_kgm3( _
               ByVal p_atma As Double, _
               ByVal t_C As Double, _
               ByVal feed As String)
' p_atma     - давление, атм
' t_C        - температура, С.
' feed - параметры потока флюидов, дебит, обводненность и пр
'              используйте encode_feed для генерации
' результат  - массив, расход ГЖС в рабочих условиях,
'              подпись, и лог расчета если подключен
'description_end
 On Error GoTo er1:
    Dim PVT As New CPVT
    Call PVT.init_feed(feed)
    Call PVT.calc_PVT(p_atma, t_C)
    feed_rho_mix_kgm3 = PVT.rho_mix_rc_kgm3
    Exit Function
er1:
    feed_rho_mix_kgm3 = "error"
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета плотности газо жидкостной смеси (ГЖС)
Public Function feed_mu_mix_cP( _
               ByVal p_atma As Double, _
               ByVal t_C As Double, _
               ByVal feed As String)
' p_atma     - давление, атм
' t_C        - температура, С.
' feed - параметры потока флюидов, дебит, обводненность и пр
'              используйте encode_feed для генерации
' результат  - массив, расход ГЖС в рабочих условиях,
'              подпись, и лог расчета если подключен
'description_end
 On Error GoTo er1:
    Dim PVT As New CPVT
    Call PVT.init_feed(feed)
    Call PVT.calc_PVT(p_atma, t_C)
    feed_mu_mix_cP = PVT.mu_mix_cP
    Exit Function
er1:
    feed_mu_mix_cP = "error"
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета свойст потока после сепарации газа
Public Function feed_mod_separate_gas( _
               ByVal k_sep As Double, _
               ByVal p_atma As Double, _
               ByVal t_C As Double, _
               ByVal feed As String, _
      Optional ByVal param As String = "")
' k_sep      - коэффициент сепарации газа
' p_atma     - давление, атм
' t_C        - температура, С.
' feed - параметры потока флюидов, дебит, обводненность и пр
'              используйте encode_feed для генерации
' param      - параметры расчета и вывода результатов
' результат  - массив, расход ГЖС в рабочих условиях,
'              подпись, и лог расчета если подключен
'description_end
    Const nv = 1
    Dim fluid_stream As New CPVT
    
    Dim res(0 To 1, 0 To nv) As Variant
    ' param dictionary and settings variables with default values
    Dim prmd As Dictionary
    Dim gas_goes_into_solution As Double
    
    Dim show_log As Boolean
    Dim show_array As Boolean
    
    Set prmd = param_to_dict(param)
    show_log = prmd(prm_show_log)
    show_array = prmd(prm_show_array)
    gas_goes_into_solution = prmd(prm_gas_goes_into_solution)
    
    ' auxiliary variables
    Dim log_str As String
    Dim i As Integer
    With fluid_stream
        Call .init_feed(feed)
        
        Call fluid_stream.mod_after_separation(p_atma, t_C, k_sep, gas_goes_into_solution)
        
        If show_array Then
            res(0, 0) = fluid_stream.get_json
            res(1, 0) = "fluid after separation"
            res(0, 1) = fluid_stream.log_.get_str_safe(show_log)
            res(1, 1) = "log"
            feed_mod_separate_gas = res
        Else
            feed_mod_separate_gas = fluid_stream.get_json
        End If
    End With
    
    
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета свойств разделенного потока флюидов
Public Function feed_mod_split( _
               ByVal k_sep_gas As Double, _
               ByVal k_sep_oil As Double, _
               ByVal k_sep_wat As Double, _
               ByVal p_atma As Double, _
               ByVal t_C As Double, _
               ByVal feed As String, _
      Optional ByVal param As String = "")
' k_sep_gas  - коэффициент сепарации газа
' k_sep_oil  - коэффициент сепарации газа
' k_sep_wat  - коэффициент сепарации газа
' p_atma     - давление, атм
' t_C        - температура, С.
' feed - параметры потока флюидов, дебит, обводненность и пр
'              используйте encode_feed для генерации
' param      - параметры расчета и вывода результатов
' результат  - массив, расход ГЖС в рабочих условиях,
'              подпись, и лог расчета если подключен
'description_end
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция расчета свойств разделенного потока флюидов
Public Function feed_mod_mix( _
               ByVal feed_1 As String, _
               ByVal feed_2 As String, _
      Optional ByVal param As String = "")
' k_sep      - коэффициент сепарации газа
' p_atma     - давление, атм
' t_C        - температура, С.
' feed - параметры потока флюидов, дебит, обводненность и пр
'              используйте encode_feed для генерации
' param      - параметры расчета и вывода результатов
' результат  - массив, расход ГЖС в рабочих условиях,
'              подпись, и лог расчета если подключен
'description_end
End Function

